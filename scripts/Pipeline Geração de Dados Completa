{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dfo572jfo7n0","executionInfo":{"status":"ok","timestamp":1752709888738,"user_tz":180,"elapsed":21935,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"}},"outputId":"f2109150-cd6c-41ea-bd92-817171525c9c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1023,"status":"ok","timestamp":1752709889758,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"_ngl2WnI3niV","outputId":"5c3d7938-d3a6-411a-86e7-27d0676aa5be"},"outputs":[{"output_type":"stream","name":"stdout","text":["Iniciando a geração da Base 1: Participantes\n","Base 1 gerada com sucesso! 10000 linhas.\n","Arquivo salvo em: data/raw/base1_participantes.csv\n","\n","Amostra dos dados gerados:\n","   id_participante idade     genero     localizacao  valor_gasto  \\\n","0                1    31  Masculino       São Paulo       372.61   \n","1                2    26  Masculino  Rio de Janeiro       809.14   \n","2                3    33  Masculino  Rio de Janeiro       448.74   \n","3                4    40  Masculino  Rio de Janeiro       245.24   \n","4                5    26   Feminino              BH       111.29   \n","\n","  frequencia_festival dia_festival  nota_lineup  satisfacao_festival  \n","0        Primeira vez  Hip-Hop/Rap          5.1                 10.0  \n","1        Primeira vez   Eletrônico          7.0                 10.0  \n","2           Ocasional  Hip-Hop/Rap          4.7                  9.4  \n","3         Veterano(a)          Pop         10.0                  6.5  \n","4        Primeira vez  Hip-Hop/Rap          9.8                  8.9  \n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-2-3677388934.py:118: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['49' '19' '25' '28' '36' '20' '29' '29' '33' '27' '42' '31' '18' '37'\n"," '30' '20' '33' '22' '31' '31' '24' '35' '34' '38' '18' '19' '33' '38'\n"," '26' '28' '32' '28' '38' '31' '28' '26' '40' '35' '28' '18' '31' '18'\n"," '18' '18' '20' '29' '25' '18' '41' '43' '18' '19' '32' '20' '31' '39'\n"," '26' '38' '31' '27' '32' '36' '20' '29' '18' '33' '26' '30' '25' '20'\n"," '29' '28' '25' '32' '29' '34' '22' '20' '31' '28' '18' '18' '25' '32'\n"," '37' '31' '36' '31' '36' '35' '18' '18' '21' '27' '19' '20' '40' '37'\n"," '25' '41' '37' '31' '25' '24' '21' '19' '34' '44' '28' '33' '28' '18'\n"," '31' '18' '21' '31' '18' '22' '18' '22' '23' '42' '25' '35' '23' '26'\n"," '24' '22' '31' '26' '32' '31' '30' '25' '30' '31' '30' '30' '22' '24'\n"," '34' '21' '29' '19' '18' '31' '18' '24' '35' '19' '34' '34' '27' '33'\n"," '33' '18' '20' '42' '18' '22' '25' '20' '21' '31' '26' '43' '26' '19'\n"," '18' '18' '22' '32' '43' '33' '32' '27' '33' '18' '20' '32' '21' '22'\n"," '23' '31' '23' '32' '31' '38' '34' '31' '26' '23' '35' '24' '22' '24'\n"," '28' '23' '29' '36' '21' '25' '34' '32' '24' '19' '25' '28' '48' '36'\n"," '18' '26' '34' '30' '30' '27' '18' '27' '25' '30' '24' '34' '24' '21'\n"," '26' '18' '27' '32' '46' '23' '32' '40' '20' '26' '29' '36' '34' '34'\n"," '29' '30' '41' '22' '26' '23' '18' '39' '18' '18' '36' '21' '34' '22'\n"," '30' '41' '32' '23' '20' '31' '27' '27' '25' '29' '20' '19' '18' '18'\n"," '18' '28' '30' '18' '40' '35' '18' '41' '19' '20' '18' '35' '20' '36'\n"," '32' '23' '27' '37' '18' '30' '22' '35' '30' '35' '28' '28' '20' '21'\n"," '24' '27' '24' '18' '40' '39' '37' '25' '31' '31' '30' '33' '27' '31'\n"," '27' '34' '20' '18' '41' '38' '38' '31' '21' '31' '18' '27' '21' '24'\n"," '18' '48' '38' '18' '26' '22' '22' '32' '32' '32' '21' '24' '38' '26'\n"," '18' '31' '30' '30' '19' '23' '27' '33' '18' '28' '28' '31' '37' '26'\n"," '30' '39' '35' '29' '26' '38' '25' '19' '28' '18' '43' '26' '18' '39'\n"," '22' '38' '46' '25' '48' '29' '33' '31' '27' '37' '23' '33' '21' '25'\n"," '36' '27' '26' '28' '31' '44' '30' '31' '18' '31' '36' '37' '29' '28'\n"," '28' '29' '28' '31' '37' '36' '22' '18' '23' '27' '25' '33' '33' '31'\n"," '26' '18' '18' '22' '18' '28' '26' '21' '39' '31' '19' '32' '44' '45'\n"," '36' '36' '31' '22' '28' '20' '21' '35' '24' '18' '38' '23' '28' '35'\n"," '24' '18' '32' '31' '28' '41' '33' '39' '18' '24' '25' '25' '33' '29'\n"," '18' '26' '18' '31' '26' '32' '39' '24' '18' '28' '32' '28' '18' '22'\n"," '18' '22' '23' '20' '30' '18' '19' '29' '32' '18' '31' '30' '26' '36'\n"," '31' '29' '26' '28' '38' '40' '24' '34' '21' '36' '41' '40' '26' '33'\n"," '18' '31' '18' '28' '21' '30' '29' '30' '30' '27' '35' '18' '32' '24'\n"," '19' '27' '25' '24' '40' '18' '31' '24' '34' '23' '23' '26' '25' '34'\n"," '33' '42' '18' '37' '27' '34' '27' '38' '20' '20' '27' '36' '20' '35'\n"," '44' '28' '36' '34' '23' '28' '27' '33' '38' '24' '27' '28' '38' '27'\n"," '25' '33' '18' '21' '18' '35' '34' '30' '30' '18' '30' '35' '36' '36'\n"," '34' '30' '34' '18' '26' '25' '20' '19' '18' '30' '30' '21' '27' '34'\n"," '20' '39' '32' '23' '28' '28' '29' '20' '44' '25' '18' '26' '34' '20'\n"," '36' '26' '40' '30' '32' '32' '28' '27' '27' '31' '38' '39' '26' '18'\n"," '25' '25' '29' '19' '37' '28' '18' '50' '18' '24' '28' '26' '18' '23'\n"," '34' '31' '25' '45' '18' '28' '32' '26' '31' '39' '25' '25' '26' '25'\n"," '18' '39' '27' '30' '26' '18' '26' '28' '34' '27' '18' '35' '19' '18'\n"," '28' '36' '32' '22' '18' '30' '33' '25' '42' '23' '39' '31' '40' '23'\n"," '39' '31' '21' '27' '40' '19' '40' '21' '33' '18' '29' '25' '25' '27'\n"," '26' '27' '33' '30' '34' '30' '28' '30' '30' '24' '25' '41' '29' '26'\n"," '24' '19' '27' '18' '24' '24' '22' '38' '33' '18' '29' '19' '34' '36'\n"," '21' '26' '21' '43' '19' '18' '20' '27' '28' '18' '26' '33' '19' '29'\n"," '42' '35' '25' '34' '31' '32' '28' '27' '32' '34' '25' '38' '18' '37'\n"," '27' '21' '23' '25' '30' '23' '18' '25' '40' '22' '47' '18' '37' '28'\n"," '36' '22' '28' '26' '26' '39' '32' '27' '38' '27' '32' '33' '30' '26'\n"," '40' '18' '25' '37' '32' '43' '32' '18' '39' '26' '23' '18' '25' '33'\n"," '20' '31' '33' '30' '20' '40' '32' '33' '36' '43' '22' '23' '24' '29'\n"," '36' '27' '22' '19' '40' '21' '19' '24' '20' '18' '24' '18' '31' '26'\n"," '23' '26' '21' '22' '28' '32' '18' '23' '35' '31' '23' '18' '48' '18'\n"," '25' '21' '18' '23' '18' '20' '29' '24' '18' '31' '27' '32' '18' '36'\n"," '39' '28' '34' '18' '23' '18' '22' '18' '28' '35' '22' '35' '33' '30'\n"," '29' '18' '30' '29' '18' '34' '31' '40' '33' '21' '25' '19' '31' '33'\n"," '31' '31' '18' '46' '19' '23' '35' '22' '34' '29' '35' '27' '26' '33'\n"," '24' '23' '47' '26' '30' '31' '21' '40' '18' '18' '30' '28' '25' '27'\n"," '25' '24' '47' '22' '22' '21' '18' '18' '44' '26' '37' '28' '19' '18'\n"," '30' '25' '44' '29' '27' '34' '30' '30' '38' '36' '31' '31' '18' '37'\n"," '25' '24' '28' '18' '18' '29' '42' '38' '29' '21' '23' '23' '23' '28'\n"," '24' '18' '36' '18' '18' '21' '24' '25' '18' '20' '18' '31' '29' '28'\n"," '24' '32' '35' '25' '35' '31' '18' '34' '28' '28' '29' '18' '19' '30'\n"," '28' '27' '29' '27' '23' '24' '34' '33' '38' '25' '22' '28' '31' '24'\n"," '26' '29' '30' '30' '31' '30' '24' '18' '39' '20' '18' '24' '20' '33'\n"," '41' '29' '18' '46' '20' '30' '40' '28' '38' '30' '21' '32' '29' '23'\n"," '34' '29' '29' '18' '24' '30']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_participantes.loc[indices_defeito, 'idade'] = df_participantes.loc[indices_defeito, 'idade'].astype(str)\n"]}],"source":["# 1_geracao/base1_participacao.py\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import random\n","\n","print(\"Iniciando a geração da Base 1: Participantes\")\n","\n","# --- Parâmetros e Pesos para Realismo ---\n","np.random.seed(42)\n","random.seed(42)\n","\n","NUM_PARTICIPANTES = 10000\n","DIAS_FESTIVAL = [\"Pop\", \"Rock\", \"Hip-Hop/Rap\", \"Música Brasileira\", \"Eletrônico\"]\n","\n","# Distribuição de localização mais realista\n","LOCALIZACAO_PESOS = {\n","    \"Rio de Janeiro\": 0.45, \"São Paulo\": 0.25, \"Belo Horizonte\": 0.10,\n","    \"Vitória\": 0.05, \"Outros\": 0.15\n","}\n","LOC_DEFEITOS = {\n","    \"Rio de Janeiro\": \" rj \", \"São Paulo\": \"sao paulo\", \"Belo Horizonte\": \"BH\"\n","}\n","\n","FREQUENCIA_OPCOES = [\"Primeira vez\", \"Ocasional\", \"Veterano(a)\"]\n","\n","# --- Geração Coluna por Coluna com Causalidade ---\n","\n","# 1. IDs e Demografia Básica\n","ids = np.arange(1, NUM_PARTICIPANTES + 1)\n","idades = np.clip(np.random.normal(loc=28, scale=8, size=NUM_PARTICIPANTES), 18, 65)\n","generos = np.random.choice([\"Masculino\", \"Feminino\", \"Outro\"], p=[0.48, 0.48, 0.04], size=NUM_PARTICIPANTES)\n","\n","# 2. Localização (com pesos e defeitos)\n","localizacoes_limpas = random.choices(\n","    list(LOCALIZACAO_PESOS.keys()), weights=list(LOCALIZACAO_PESOS.values()), k=NUM_PARTICIPANTES\n",")\n","localizacoes_com_defeitos = []\n","for loc in localizacoes_limpas:\n","    if random.random() < 0.15: # Introduz defeitos em 15% dos dados\n","        localizacoes_com_defeitos.append(LOC_DEFEITOS.get(loc, loc))\n","    else:\n","        localizacoes_com_defeitos.append(loc)\n","\n","# 3. Dia do Festival (Causalidade com Idade)\n","dias_festival = []\n","for idade in idades:\n","    if idade < 25:\n","        dia = np.random.choice(DIAS_FESTIVAL, p=[0.35, 0.15, 0.35, 0.05, 0.1])\n","    elif idade >= 40:\n","        dia = np.random.choice(DIAS_FESTIVAL, p=[0.05, 0.40, 0.05, 0.40, 0.1])\n","    else:\n","        dia = np.random.choice(DIAS_FESTIVAL)\n","    dias_festival.append(dia)\n","\n","# 4. Valor Gasto no Evento (Causalidade com Dia do Festival)\n","# A lógica simula que o gasto médio varia conforme o dia do festival.\n","valores_gasto = []\n","for dia in dias_festival:\n","    # A base de gasto usa log-normal para realismo (muitos gastam moderadamente, poucos gastam muito)\n","    base_gasto = np.random.lognormal(mean=5.5, sigma=0.5) # Mediana em torno de R$244\n","\n","    # Aplica multiplicadores baseados no dia do festival\n","    if dia in [\"Pop\", \"Rock\"]:\n","        gasto = base_gasto * 1.2\n","    elif dia == \"Hip-Hop/Rap\":\n","        gasto = base_gasto * 1.1\n","    else:\n","        gasto = base_gasto * 0.9\n","\n","    valores_gasto.append(gasto)\n","\n","valores_gasto = np.array(valores_gasto)\n","# Introduz valores nulos para simular participantes que não registraram gastos\n","valores_gasto[np.random.choice(valores_gasto.size, int(NUM_PARTICIPANTES * 0.10), replace=False)] = np.nan\n","\n","# 5. Frequência (Não Causal)\n","frequencia_festival = np.random.choice(FREQUENCIA_OPCOES, p=[0.4, 0.35, 0.25], size=NUM_PARTICIPANTES)\n","\n","# 6. Nota do Lineup (Causal com Dia/Gênero)\n","notas_lineup = []\n","for dia in dias_festival:\n","    if dia in [\"Pop\", \"Rock\"]:\n","        nota = np.random.normal(loc=8.5, scale=1.5)\n","    elif dia == \"Música Brasileira\":\n","        nota = np.random.normal(loc=7.5, scale=1.8)\n","    else:\n","        nota = np.random.normal(loc=7.0, scale=2.0)\n","    notas_lineup.append(round(np.clip(nota, 1, 10), 1))\n","\n","# 7. Satisfação Geral com o Festival (Causal com Frequência)\n","satisfacao_festival = []\n","for freq in frequencia_festival:\n","    if freq == \"Primeira vez\":\n","        satisfacao = np.random.normal(loc=9.0, scale=1.0)\n","    elif freq == \"Ocasional\":\n","        satisfacao = np.random.normal(loc=8.0, scale=1.5)\n","    else:\n","        satisfacao = np.random.normal(loc=7.5, scale=2.0)\n","    satisfacao_festival.append(round(np.clip(satisfacao, 1, 10), 1))\n","\n","# --- Montagem e Finalização do DataFrame ---\n","df_participantes = pd.DataFrame({\n","    'id_participante': ids,\n","    'idade': idades.astype(int),\n","    'genero': generos,\n","    'localizacao': localizacoes_com_defeitos,\n","    'valor_gasto': np.round(valores_gasto, 2),\n","    'frequencia_festival': frequencia_festival,\n","    'dia_festival': dias_festival,\n","    'nota_lineup': notas_lineup,\n","    'satisfacao_festival': satisfacao_festival\n","})\n","\n","# Introduzindo defeito final: tipo de dado inconsistente em 'idade'\n","indices_defeito = df_participantes.sample(frac=0.1, random_state=42).index\n","df_participantes.loc[indices_defeito, 'idade'] = df_participantes.loc[indices_defeito, 'idade'].astype(str)\n","\n","# --- Salvando o arquivo ---\n","output_dir = \"data/raw\"\n","os.makedirs(output_dir, exist_ok=True)\n","output_path = os.path.join(output_dir, 'base1_participantes.csv')\n","df_participantes.to_csv(output_path, index=False, encoding='utf-8-sig')\n","\n","print(f\"Base 1 gerada com sucesso! {len(df_participantes)} linhas.\")\n","print(f\"Arquivo salvo em: {output_path}\")\n","print(\"\\nAmostra dos dados gerados:\")\n","print(df_participantes.head())"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2249,"status":"ok","timestamp":1752709892010,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"47GQZpjgFlO1","outputId":"c618f39b-33e3-4178-b876-dfc1f83c1542"},"outputs":[{"output_type":"stream","name":"stdout","text":["Iniciando a geração da Base 2 (versão com Segmentos): Interações de Mercado\n","Gerando interações com segmentos para cada participante...\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-3-133156236.py:83: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['6 min' '16 min' '26 min' ... '16 min' '13 min' '17 min']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_interacoes.loc[indices_defeito_tempo, 'tempo_de_espera'] = df_interacoes.loc[indices_defeito_tempo, 'tempo_de_espera'].astype(str) + ' min'\n"]},{"output_type":"stream","name":"stdout","text":["Enriquecendo a Base 1 com o segmento mais lembrado...\n","\n","Base 2 gerada com sucesso! 25130 linhas.\n","Arquivo salvo em: data/raw/base2_marcas.csv\n","\n","Base 1 foi atualizada/enriquecida com a coluna 'segmento_mais_lembrado'.\n","Arquivo salvo em: data/raw/base1_participantes.csv\n","\n","🔍 Verificação da Base 2:\n","---------------------------------------\n","Amostra da base de interações com segmentos:\n","       id_interacao  id_participante   segmento_interagido  \\\n","17446         17447             6934  Serviços Financeiros   \n","5324           5325             2120                Beleza   \n","13642         13643             5421      Telecomunicações   \n","5070           5071             2024      Bebida Alcoólica   \n","12077         12078             4789  Bebida Não Alcoólica   \n","\n","               tipo_interacao tempo_de_espera  avaliacao_experiencia_ativacao  \\\n","17446  Participou de Ativação              23                               4   \n","5324         Visita a Estande               9                               4   \n","13642       Compra de Produto              15                               2   \n","5070         Visita a Estande              11                               3   \n","12077        Visita a Estande              10                               5   \n","\n","       avaliacao_brinde  satisfacao_segmento  recomendaria_segmento  \n","17446               NaN                  2.5                   True  \n","5324                1.0                  2.4                  False  \n","13642               NaN                  1.0                  False  \n","5070                NaN                  2.1                  False  \n","12077               NaN                  3.3                  False  \n","\n","Verificação do enriquecimento na Base 1:\n","   id_participante segmento_mais_lembrado\n","0                1   Serviços Financeiros\n","1                2                 Beleza\n","2                3   Bebida Não Alcoólica\n","3                4                 Beleza\n","4                5       Bebida Alcoólica\n"]}],"source":["# 1_geracao/base2_marcas.py\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import random\n","\n","print(\"Iniciando a geração da Base 2 (versão com Segmentos): Interações de Mercado\")\n","\n","# --- Configurações ---\n","np.random.seed(42)\n","random.seed(42)\n","\n","# --- Carregar a Base 1 para usar seus dados na geração ---\n","path_b1 = \"data/raw/base1_participantes.csv\"\n","if not os.path.exists(path_b1):\n","    print(f\"Erro: Arquivo '{path_b1}' não encontrado. Execute o script base1_participacao.py primeiro.\")\n","    exit()\n","\n","df_participantes = pd.read_csv(path_b1)\n","\n","# --- Parâmetros dos Segmentos e Interações (SEM NOMES DE MARCAS) ---\n","SEGMENTOS_DISPONIVEIS = [\n","    \"Serviços Financeiros\", \"Bebida Alcoólica\", \"Postos de Combustível\",\n","    \"Alimentos\", \"Seguros\", \"Telecomunicações\", \"Moda\", \"Automobilismo\",\n","    \"Bebida Não Alcoólica\", \"Beleza\", \"Chocolates\"\n","]\n","TIPO_INTERACAO_PESOS = {\n","    \"Compra de Produto\": 0.5,\n","    \"Visita a Estande\": 0.3,\n","    \"Participou de Ativação\": 0.2\n","}\n","\n","# --- Geração das Interações ---\n","interacoes_lista = []\n","id_interacao_counter = 1\n","\n","print(\"Gerando interações com segmentos para cada participante...\")\n","for _, participante in df_participantes.iterrows():\n","    # Cada participante interage com 1 a 4 segmentos\n","    num_interacoes = random.randint(1, 4)\n","    segmentos_interagidos = random.sample(SEGMENTOS_DISPONIVEIS, k=num_interacoes)\n","\n","    for segmento in segmentos_interagidos:\n","        # Gerando as variáveis independentes primeiro\n","        tempo_de_espera = round(np.random.lognormal(mean=2.5, sigma=0.8)) # Em minutos\n","        avaliacao_experiencia = random.randint(1, 5)\n","\n","        if random.random() < 0.4: # 40% de chance de ter brinde\n","            avaliacao_brinde = random.randint(1, 5)\n","        else:\n","            avaliacao_brinde = np.nan # Defeito: NaN para interações sem brinde\n","\n","        # Relação Causal #1 (Forte): satisfacao_marca depende de experiencia, tempo e brinde\n","        tempo_espera_normalizado = min(tempo_de_espera / 30, 1) # Penalidade máxima após 30 min\n","        nota_base = (avaliacao_experiencia * 0.7) - (tempo_espera_normalizado * 0.5)\n","        if not np.isnan(avaliacao_brinde):\n","             nota_base += (avaliacao_brinde * 0.2)\n","        satisfacao_segmento = round(np.clip(nota_base + np.random.normal(0, 0.3), 1, 5), 1)\n","\n","        # Relação Causal #5 (Esperada): recomendaria_segmento depende da satisfação\n","        prob_recomendar = (satisfacao_segmento - 1) / 4\n","        recomendaria_segmento = random.random() < prob_recomendar\n","\n","        interacoes_lista.append({\n","            'id_interacao': id_interacao_counter,\n","            'id_participante': participante['id_participante'],\n","            'segmento_interagido': segmento,\n","            'tipo_interacao': random.choices(list(TIPO_INTERACAO_PESOS.keys()), weights=list(TIPO_INTERACAO_PESOS.values()), k=1)[0],\n","            'tempo_de_espera': tempo_de_espera,\n","            'avaliacao_experiencia_ativacao': avaliacao_experiencia,\n","            'avaliacao_brinde': avaliacao_brinde,\n","            'satisfacao_segmento': satisfacao_segmento,\n","            'recomendaria_segmento': recomendaria_segmento\n","        })\n","        id_interacao_counter += 1\n","\n","df_interacoes = pd.DataFrame(interacoes_lista)\n","\n","# --- Introdução de Defeitos Adicionais para Pré-processamento ---\n","# 1. Defeito no tempo_de_espera: Alguns valores como string \"X min\"\n","indices_defeito_tempo = df_interacoes.sample(frac=0.1, random_state=1).index\n","df_interacoes.loc[indices_defeito_tempo, 'tempo_de_espera'] = df_interacoes.loc[indices_defeito_tempo, 'tempo_de_espera'].astype(str) + ' min'\n","\n","# 2. Defeito em satisfacao_segmento: Outliers (valores fora da escala 1-5)\n","indices_defeito_satisfacao = df_interacoes.sample(frac=0.03, random_state=2).index\n","df_interacoes.loc[indices_defeito_satisfacao, 'satisfacao_segmento'] = random.choices([0, -1, 6, 7.5], k=len(indices_defeito_satisfacao))\n","\n","# --- Passo de Enriquecimento: Atualizar a Base 1 ---\n","# Relação Causal #7: O segmento mais lembrado é aquele com maior satisfação\n","print(\"Enriquecendo a Base 1 com o segmento mais lembrado...\")\n","idx_max_satisfacao = df_interacoes.groupby('id_participante')['satisfacao_segmento'].idxmax()\n","df_melhor_experiencia = df_interacoes.loc[idx_max_satisfacao][['id_participante', 'segmento_interagido']]\n","\n","mapeamento_segmento = df_melhor_experiencia.set_index('id_participante')['segmento_interagido']\n","df_participantes['segmento_mais_lembrado'] = df_participantes['id_participante'].map(mapeamento_segmento)\n","\n","# --- Salvando os Arquivos ---\n","output_dir = \"data/raw\"\n","os.makedirs(output_dir, exist_ok=True)\n","\n","# Salva a Base 2\n","path_b2 = os.path.join(output_dir, 'base2_marcas.csv')\n","df_interacoes.to_csv(path_b2, index=False, encoding='utf-8-sig')\n","print(f\"\\nBase 2 gerada com sucesso! {len(df_interacoes)} linhas.\")\n","print(f\"Arquivo salvo em: {path_b2}\")\n","\n","# Salva novamente a Base 1, agora enriquecida\n","df_participantes.to_csv(path_b1, index=False, encoding='utf-8-sig')\n","print(f\"\\nBase 1 foi atualizada/enriquecida com a coluna 'segmento_mais_lembrado'.\")\n","print(f\"Arquivo salvo em: {path_b1}\")\n","\n","print(\"\\n🔍 Verificação da Base 2:\")\n","print(\"---------------------------------------\")\n","print(\"Amostra da base de interações com segmentos:\")\n","print(df_interacoes.sample(5, random_state=42))\n","print(\"\\nVerificação do enriquecimento na Base 1:\")\n","print(df_participantes[['id_participante', 'segmento_mais_lembrado']].dropna().head())"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"executionInfo":{"elapsed":136,"status":"ok","timestamp":1752709892148,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"9r6V1m-VDDDm","outputId":"0ebb9f33-7564-4955-a0ed-cb636e335790"},"outputs":[{"output_type":"stream","name":"stdout","text":["Iniciando a geração da Base 3 (versão aprimorada com Alcance, Impressões e Salvamentos)\n","Gerando posts da campanha da marca para cada dia do festival...\n","\n","Base 3 (versão final) gerada com sucesso! 150 linhas.\n","Arquivo salvo em: data/raw/base3_redes.csv\n","\n","Amostra dos dados gerados com as novas métricas:\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-4-1213878084.py:93: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '2.8k' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_redes.loc[idx, 'curtidas'] = f\"{valor/1000:.1f}k\"\n","/tmp/ipython-input-4-1213878084.py:96: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '1.5k' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_redes.loc[idx, 'comentarios'] = f\"{valor_comentario/1000:.1f}k\"\n"]},{"output_type":"display_data","data":{"text/plain":["   id_post data_postagem rede_social dia_festival tipo_conteudo  alcance  \\\n","0        1    13/09/2024   Instagram          Pop         Reels   312963   \n","1        2    13/09/2024   Instagram          Pop   Vídeo Curto   250246   \n","2        3    2024-09-13   Instagram          Pop         Reels   209163   \n","3        4    2024-09-13   Instagram          Pop         Reels   328706   \n","4        5    13/09/2024   Instagram          Pop         Reels   327565   \n","\n","   impressoes curtidas comentarios  compartilhamentos  salvamentos  \n","0      518761    24127         805                914          389  \n","1      427000    35910        1121                740         1050  \n","2      261168    12108         187                352          219  \n","3      482324    31827         362               1566          344  \n","4      540358    25921         659                979          159  "],"text/html":["\n","  <div id=\"df-ab424ead-626f-4eb0-9be6-4fa1b6f037a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_post</th>\n","      <th>data_postagem</th>\n","      <th>rede_social</th>\n","      <th>dia_festival</th>\n","      <th>tipo_conteudo</th>\n","      <th>alcance</th>\n","      <th>impressoes</th>\n","      <th>curtidas</th>\n","      <th>comentarios</th>\n","      <th>compartilhamentos</th>\n","      <th>salvamentos</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>13/09/2024</td>\n","      <td>Instagram</td>\n","      <td>Pop</td>\n","      <td>Reels</td>\n","      <td>312963</td>\n","      <td>518761</td>\n","      <td>24127</td>\n","      <td>805</td>\n","      <td>914</td>\n","      <td>389</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>13/09/2024</td>\n","      <td>Instagram</td>\n","      <td>Pop</td>\n","      <td>Vídeo Curto</td>\n","      <td>250246</td>\n","      <td>427000</td>\n","      <td>35910</td>\n","      <td>1121</td>\n","      <td>740</td>\n","      <td>1050</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2024-09-13</td>\n","      <td>Instagram</td>\n","      <td>Pop</td>\n","      <td>Reels</td>\n","      <td>209163</td>\n","      <td>261168</td>\n","      <td>12108</td>\n","      <td>187</td>\n","      <td>352</td>\n","      <td>219</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2024-09-13</td>\n","      <td>Instagram</td>\n","      <td>Pop</td>\n","      <td>Reels</td>\n","      <td>328706</td>\n","      <td>482324</td>\n","      <td>31827</td>\n","      <td>362</td>\n","      <td>1566</td>\n","      <td>344</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>13/09/2024</td>\n","      <td>Instagram</td>\n","      <td>Pop</td>\n","      <td>Reels</td>\n","      <td>327565</td>\n","      <td>540358</td>\n","      <td>25921</td>\n","      <td>659</td>\n","      <td>979</td>\n","      <td>159</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab424ead-626f-4eb0-9be6-4fa1b6f037a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ab424ead-626f-4eb0-9be6-4fa1b6f037a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ab424ead-626f-4eb0-9be6-4fa1b6f037a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7756500e-f526-4dcc-a60f-cc87a8bddc47\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7756500e-f526-4dcc-a60f-cc87a8bddc47')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7756500e-f526-4dcc-a60f-cc87a8bddc47 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_redes\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id_post\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"data_postagem\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2024-09-13\",\n          \"13/09/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rede_social\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Instagram\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dia_festival\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Pop\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tipo_conteudo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"V\\u00eddeo Curto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alcance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 53526,\n        \"min\": 209163,\n        \"max\": 328706,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          250246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"impressoes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111849,\n        \"min\": 261168,\n        \"max\": 540358,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          427000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"curtidas\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 12108,\n        \"max\": 35910,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          35910\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comentarios\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 187,\n        \"max\": 1121,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1121\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"compartilhamentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 440,\n        \"min\": 352,\n        \"max\": 1566,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salvamentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 357,\n        \"min\": 159,\n        \"max\": 1050,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1050\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}],"source":["# 1_geracao/base3_redes.py\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import random\n","from datetime import datetime, timedelta\n","\n","print(\"Iniciando a geração da Base 3 (versão aprimorada com Alcance, Impressões e Salvamentos)\")\n","\n","# --- Configurações ---\n","np.random.seed(42)\n","random.seed(42)\n","\n","DIAS_FESTIVAL = [\"Pop\", \"Rock\", \"Hip-Hop/Rap\", \"Música Brasileira\", \"Eletrônico\"]\n","REDES_SOCIAIS = [\"Instagram\", \"Twitter\", \"TikTok\"]\n","DATA_INICIO_FESTIVAL = datetime(2024, 9, 13)\n","POSTS_POR_DIA_POR_REDE = 10\n","\n","# --- Geração dos Posts ---\n","posts_lista = []\n","id_post_counter = 1\n","\n","print(\"Gerando posts da campanha da marca para cada dia do festival...\")\n","for i, dia in enumerate(DIAS_FESTIVAL):\n","    data_do_dia = DATA_INICIO_FESTIVAL + timedelta(days=i)\n","\n","    for rede in REDES_SOCIAIS:\n","        for _ in range(POSTS_POR_DIA_POR_REDE):\n","\n","            # --- Lógica de Geração Revisada (Funil de Marketing Digital) ---\n","\n","            # 1. Estratégia de Conteúdo (como antes)\n","            if rede == \"TikTok\": tipo_conteudo = \"Vídeo Curto\"\n","            elif rede == \"Instagram\": tipo_conteudo = random.choice([\"Reels\", \"Vídeo Curto\"]) if dia in [\"Pop\", \"Eletrônico\"] else random.choice([\"Foto\", \"Carrossel\"])\n","            else: tipo_conteudo = \"Texto com Imagem\"\n","\n","            # 2. Geração de Alcance (Reach) - Pessoas Únicas\n","            # Simula que TikTok tem maior alcance orgânico, seguido por Instagram.\n","            if rede == \"TikTok\": base_alcance = np.random.randint(80000, 300000)\n","            elif rede == \"Instagram\": base_alcance = np.random.randint(50000, 200000)\n","            else: base_alcance = np.random.randint(10000, 50000)\n","\n","            # Formatos de vídeo têm maior potencial de alcance\n","            if tipo_conteudo in [\"Reels\", \"Vídeo Curto\"]: base_alcance *= 1.4\n","\n","            # Multiplicador de \"hype\" do festival\n","            multiplicador_dia = 1.3 - (i * 0.1)\n","            alcance = int(base_alcance * multiplicador_dia)\n","\n","            # 3. Geração de Impressões (Impressions) a partir do Alcance\n","            # Impressões = Alcance * Frequência (quantas vezes em média cada pessoa viu)\n","            frequencia = np.random.uniform(1.1, 1.8) # Cada pessoa viu o post entre 1.1 e 1.8 vezes em média\n","            impressoes = int(alcance * frequencia)\n","\n","            # 4. Geração de Curtidas a partir das Impressões\n","            # Taxa de engajamento (curtidas/impressões) varia\n","            taxa_de_curtidas = np.random.uniform(0.03, 0.12) # Entre 3% e 12%\n","            curtidas = int(impressoes * taxa_de_curtidas)\n","\n","            # 5. Geração de outras interações a partir das Curtidas\n","            comentarios = int(curtidas * np.random.uniform(0.01, 0.04))\n","            compartilhamentos = int(curtidas * np.random.uniform(0.02, 0.05))\n","            # Salvamentos são uma ação de alta intenção, geralmente menos frequentes\n","            salvamentos = int(curtidas * np.random.uniform(0.005, 0.03))\n","\n","\n","            # --- Introdução de Defeitos (como antes) ---\n","            if random.random() < 0.3: data_postagem = data_do_dia.strftime('%d/%m/%Y')\n","            else: data_postagem = data_do_dia.strftime('%Y-%m-%d')\n","\n","            posts_lista.append({\n","                'id_post': id_post_counter,\n","                'data_postagem': data_postagem,\n","                'rede_social': rede,\n","                'dia_festival': dia,\n","                'tipo_conteudo': tipo_conteudo,\n","                'alcance': alcance,\n","                'impressoes': impressoes,\n","                'curtidas': curtidas,\n","                'comentarios': comentarios,\n","                'compartilhamentos': compartilhamentos,\n","                'salvamentos': salvamentos\n","            })\n","            id_post_counter += 1\n","\n","df_redes = pd.DataFrame(posts_lista)\n","\n","# Defeito no formato das métricas (formato \"k\")\n","indices_defeito_k = df_redes[df_redes['curtidas'] > 1000].sample(frac=0.2, random_state=1).index\n","for idx in indices_defeito_k:\n","    valor = df_redes.loc[idx, 'curtidas']\n","    df_redes.loc[idx, 'curtidas'] = f\"{valor/1000:.1f}k\"\n","    valor_comentario = df_redes.loc[idx, 'comentarios']\n","    if valor_comentario > 1000:\n","       df_redes.loc[idx, 'comentarios'] = f\"{valor_comentario/1000:.1f}k\"\n","\n","# --- Salvando o arquivo ---\n","output_dir = \"data/raw\"\n","os.makedirs(output_dir, exist_ok=True)\n","output_path = os.path.join(output_dir, 'base3_redes.csv')\n","df_redes.to_csv(output_path, index=False, encoding='utf-8-sig')\n","\n","print(f\"\\nBase 3 (versão final) gerada com sucesso! {len(df_redes)} linhas.\")\n","print(f\"Arquivo salvo em: {output_path}\")\n","\n","print(\"\\nAmostra dos dados gerados com as novas métricas:\")\n","display(df_redes.head())"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":660},"executionInfo":{"elapsed":255,"status":"ok","timestamp":1752709892408,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"fMQFirNND6B4","outputId":"46f19803-d6c1-40cf-ced1-ad0718536269"},"outputs":[{"output_type":"stream","name":"stdout","text":["Biblioteca Faker não encontrada. Usando fallback para nomes de usuário.\n","Iniciando a geração da Base 4 (versão 'deep dive'): Menções Abertas dos Usuários\n","Filtrando interações para gerar menções apenas para o segmento: 'Bebida Alcoólica'\n","Gerando 1135 menções de usuários com base em suas interações com 'Bebida Alcoólica'...\n","\n","Base 4 gerada com sucesso! 1135 linhas.\n","Arquivo salvo em: data/raw/base4_marca_aberta.csv\n","\n","Amostra dos dados gerados:\n"]},{"output_type":"display_data","data":{"text/plain":["   id_mencao  id_participante nome_usuario rede_social segmento_mencionado  \\\n","0          1              851      user851     Twitter    Bebida Alcoólica   \n","1          2             9172     user9172     Twitter    Bebida Alcoólica   \n","2          3             7338     user7338     Twitter    Bebida Alcoólica   \n","3          4             4797     user4797   Instagram    Bebida Alcoólica   \n","4          5             6127     user6127     Twitter    Bebida Alcoólica   \n","\n","        dia_festival tema_conteudo  \\\n","0         Eletrônico        neutro   \n","1  Música Brasileira    reclamacao   \n","2                Pop        neutro   \n","3                Pop    reclamacao   \n","4  Música Brasileira    reclamacao   \n","\n","                                       conteudo_post  \n","0  Alguém sabe o q tá rolando na ativação de Bebi...  \n","1  Absurdo o tempo de espera na fila de Bebida Al...  \n","2  Alguém sabe o que tá rolando na ativação de Be...  \n","3  O pessoal de Bebida Alcoólica parecia perdido,...  \n","4  Absurdo o tempo de espera na fila de Bebida Al...  "],"text/html":["\n","  <div id=\"df-c62ff784-2408-4e31-9d15-03a4eb9b0e43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_mencao</th>\n","      <th>id_participante</th>\n","      <th>nome_usuario</th>\n","      <th>rede_social</th>\n","      <th>segmento_mencionado</th>\n","      <th>dia_festival</th>\n","      <th>tema_conteudo</th>\n","      <th>conteudo_post</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>851</td>\n","      <td>user851</td>\n","      <td>Twitter</td>\n","      <td>Bebida Alcoólica</td>\n","      <td>Eletrônico</td>\n","      <td>neutro</td>\n","      <td>Alguém sabe o q tá rolando na ativação de Bebi...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>9172</td>\n","      <td>user9172</td>\n","      <td>Twitter</td>\n","      <td>Bebida Alcoólica</td>\n","      <td>Música Brasileira</td>\n","      <td>reclamacao</td>\n","      <td>Absurdo o tempo de espera na fila de Bebida Al...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>7338</td>\n","      <td>user7338</td>\n","      <td>Twitter</td>\n","      <td>Bebida Alcoólica</td>\n","      <td>Pop</td>\n","      <td>neutro</td>\n","      <td>Alguém sabe o que tá rolando na ativação de Be...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4797</td>\n","      <td>user4797</td>\n","      <td>Instagram</td>\n","      <td>Bebida Alcoólica</td>\n","      <td>Pop</td>\n","      <td>reclamacao</td>\n","      <td>O pessoal de Bebida Alcoólica parecia perdido,...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>6127</td>\n","      <td>user6127</td>\n","      <td>Twitter</td>\n","      <td>Bebida Alcoólica</td>\n","      <td>Música Brasileira</td>\n","      <td>reclamacao</td>\n","      <td>Absurdo o tempo de espera na fila de Bebida Al...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c62ff784-2408-4e31-9d15-03a4eb9b0e43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c62ff784-2408-4e31-9d15-03a4eb9b0e43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c62ff784-2408-4e31-9d15-03a4eb9b0e43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9c4e8336-0e06-4fba-883b-77036e2a595a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c4e8336-0e06-4fba-883b-77036e2a595a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9c4e8336-0e06-4fba-883b-77036e2a595a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_mencoes\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id_mencao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_participante\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3132,\n        \"min\": 851,\n        \"max\": 9172,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9172,\n          6127,\n          7338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_usuario\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"user9172\",\n          \"user6127\",\n          \"user7338\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rede_social\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Instagram\",\n          \"Twitter\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"segmento_mencionado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Bebida Alco\\u00f3lica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dia_festival\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Eletr\\u00f4nico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tema_conteudo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"reclamacao\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"conteudo_post\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Absurdo o tempo de espera na fila de Bebida Alco\\u00f3lica: 27 minutos pra nada. \\ud83d\\ude21 #Fail \\ud83e\\udd14\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}],"source":["# 1_geracao/base4_marca_aberta.py\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import random\n","\n","try:\n","    from faker import Faker\n","    fake = Faker('pt_BR')\n","except ImportError:\n","    print(\"Biblioteca Faker não encontrada. Usando fallback para nomes de usuário.\")\n","    fake = None\n","\n","print(\"Iniciando a geração da Base 4 (versão 'deep dive'): Menções Abertas dos Usuários\")\n","\n","# --- Configurações ---\n","np.random.seed(42)\n","random.seed(42)\n","\n","# --- Carregar as bases anteriores ---\n","path_b1 = \"data/raw/base1_participantes.csv\"\n","path_b2 = \"data/raw/base2_marcas.csv\"\n","\n","if not os.path.exists(path_b1) or not os.path.exists(path_b2):\n","    print(\"Erro: Arquivos das bases 1 ou 2 não encontrados. Execute os scripts anteriores primeiro.\")\n","    exit()\n","\n","df_participantes = pd.read_csv(path_b1)\n","df_interacoes = pd.read_csv(path_b2, low_memory=False)\n","\n","# --- Limpeza preliminar da Base 2 ---\n","def limpar_tempo(valor):\n","    if isinstance(valor, str):\n","        return int(valor.replace(' min', ''))\n","    return int(valor)\n","df_interacoes['tempo_de_espera_limpo'] = df_interacoes['tempo_de_espera'].apply(limpar_tempo)\n","\n","# --- Lógica de \"Deep Dive\" em um Segmento Específico ---\n","SEGMENTO_ALVO = \"Bebida Alcoólica\"\n","print(f\"Filtrando interações para gerar menções apenas para o segmento: '{SEGMENTO_ALVO}'\")\n","\n","# Para adicionar o 'dia_festival', precisamos primeiro juntar a Base 1 e 2\n","# Apenas as colunas necessárias para evitar sobrecarga de memória\n","df_interacoes_enriquecido = pd.merge(\n","    df_interacoes,\n","    df_participantes[['id_participante', 'dia_festival']],\n","    on='id_participante',\n","    how='left'\n",")\n","\n","# Agora, filtramos o dataframe já enriquecido\n","df_interacoes_filtrado = df_interacoes_enriquecido[df_interacoes_enriquecido['segmento_interagido'] == SEGMENTO_ALVO].copy()\n","\n","if df_interacoes_filtrado.empty:\n","    print(f\"Nenhuma interação encontrada para o segmento '{SEGMENTO_ALVO}'. A Base 4 não será gerada.\")\n","    exit()\n","\n","# --- Parâmetros ---\n","fracao_amostra = 0.5\n","NUM_MENCOES = int(len(df_interacoes_filtrado) * fracao_amostra)\n","REDES_SOCIAIS = ['Twitter', 'Instagram']\n","TEMPLATES = {\n","    'elogio': [\n","        \"A experiência no estande de {segmento} foi SENSACIONAL! Valeu cada segundo. #Festival\",\n","        \"Que organização incrível no espaço de {segmento}. Atendimento nota 10/10. ✨\",\n","        \"Simplesmente amei o brinde que ganhei de {segmento}! Já quero o próximo festival.\"\n","    ],\n","    'reclamacao': [\n","        \"Absurdo o tempo de espera na fila de {segmento}: {tempo_espera} minutos pra nada. 😡 #Fail\",\n","        \"Totalmente decepcionado com a ativação de {segmento}. Esperava muito mais.\",\n","        \"O pessoal de {segmento} parecia perdido, atendimento péssimo.\"\n","    ],\n","    'neutro': [\n","        \"Passei pelo estande de {segmento} hoje no festival.\",\n","        \"Vi que {segmento} é um dos patrocinadores este ano.\",\n","        \"Alguém sabe o que tá rolando na ativação de {segmento}?\"\n","    ]\n","}\n","\n","# --- Geração dos Posts ---\n","mencoes_lista = []\n","id_mencao_counter = 1\n","print(f\"Gerando {NUM_MENCOES} menções de usuários com base em suas interações com '{SEGMENTO_ALVO}'...\")\n","\n","amostra_interacoes = df_interacoes_filtrado.sample(n=NUM_MENCOES, random_state=42)\n","\n","for _, interacao in amostra_interacoes.iterrows():\n","    satisfacao = interacao['satisfacao_segmento']\n","    tempo_espera = interacao['tempo_de_espera_limpo']\n","    dia_do_festival = interacao['dia_festival'] # Capturando o dia do festival\n","\n","    # Definir o tom do post com base na satisfação\n","    if satisfacao >= 4.0: tema_conteudo = 'elogio'\n","    elif satisfacao <= 2.5: tema_conteudo = 'reclamacao'\n","    else: tema_conteudo = 'neutro'\n","\n","    conteudo = random.choice(TEMPLATES[tema_conteudo]).format(\n","        segmento=SEGMENTO_ALVO, tempo_espera=tempo_espera\n","    )\n","\n","    # Adicionar ruído linguístico\n","    if random.random() < 0.3: conteudo = conteudo.replace(\"que\", \"q\").replace(\"nao\", \"n\")\n","    if random.random() < 0.6: conteudo += \" \" + random.choice(['kkkkk', '😂', '🤡', 'top', 'aff', '🤔'])\n","\n","    # Gerar nome de usuário\n","    if fake: nome_usuario = fake.first_name().lower() + str(random.randint(10, 99))\n","    else: nome_usuario = f\"user{interacao['id_participante']}\"\n","\n","    mencoes_lista.append({\n","        'id_mencao': id_mencao_counter,\n","        'id_participante': interacao['id_participante'],\n","        'nome_usuario': nome_usuario,\n","        'rede_social': random.choice(REDES_SOCIAIS),\n","        'segmento_mencionado': SEGMENTO_ALVO,      # <-- COLUNA PREENCHIDA DIRETAMENTE\n","        'dia_festival': dia_do_festival,           # <-- NOVA COLUNA ADICIONADA\n","        'tema_conteudo': tema_conteudo,\n","        'conteudo_post': conteudo\n","    })\n","    id_mencao_counter += 1\n","\n","df_mencoes = pd.DataFrame(mencoes_lista)\n","\n","# --- Salvando o arquivo ---\n","output_dir = \"data/raw\"\n","os.makedirs(output_dir, exist_ok=True)\n","output_path = os.path.join(output_dir, 'base4_marca_aberta.csv')\n","df_mencoes.to_csv(output_path, index=False, encoding='utf-8-sig')\n","\n","print(f\"\\nBase 4 gerada com sucesso! {len(df_mencoes)} linhas.\")\n","print(f\"Arquivo salvo em: {output_path}\")\n","\n","print(\"\\nAmostra dos dados gerados:\")\n","display(df_mencoes.head())"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":607,"status":"ok","timestamp":1752709893022,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"9_cf_uP7EvY6","outputId":"17a911a1-8761-482c-89b2-af4efc9ec876"},"outputs":[{"output_type":"stream","name":"stdout","text":["--- Iniciando Etapa 2: Unificação dos Dados ---\n","Carregando dados de 'data/raw/base1_participantes.csv'...\n","Carregando dados de 'data/raw/base2_marcas.csv'...\n","Carregando dados de 'data/raw/base3_redes.csv'...\n","Carregando dados de 'data/raw/base4_marca_aberta.csv'...\n","\n","Todos os arquivos foram carregados com sucesso.\n","\n","Unificando a base de interações com a base de participantes...\n","A tabela principal unificada tem 25130 linhas e 18 colunas.\n","\n","Salvando a tabela principal unificada em 'data/interim/dados_unificados_para_processamento.csv'...\n","\n","--- Etapa 2: Unificação concluída com sucesso! ---\n","O arquivo principal para a próxima etapa está pronto.\n","\n","Amostra da tabela unificada:\n","   id_interacao  id_participante   segmento_interagido     tipo_interacao  \\\n","0             1                1  Serviços Financeiros   Visita a Estande   \n","1             2                2                Beleza   Visita a Estande   \n","2             3                3  Bebida Não Alcoólica  Compra de Produto   \n","3             4                4                Beleza   Visita a Estande   \n","4             5                4               Seguros  Compra de Produto   \n","\n","  tempo_de_espera  avaliacao_experiencia_ativacao  avaliacao_brinde  \\\n","0          18 min                               3               2.0   \n","1              20                               4               1.0   \n","2          10 min                               2               NaN   \n","3              43                               4               2.0   \n","4               8                               1               1.0   \n","\n","   satisfacao_segmento  recomendaria_segmento  idade     genero  \\\n","0                  2.2                  False     31  Masculino   \n","1                  3.1                   True     26  Masculino   \n","2                  1.2                  False     33  Masculino   \n","3                  2.9                   True     40  Masculino   \n","4                  1.0                  False     40  Masculino   \n","\n","      localizacao  valor_gasto frequencia_festival dia_festival  nota_lineup  \\\n","0       São Paulo       372.61        Primeira vez  Hip-Hop/Rap          5.1   \n","1  Rio de Janeiro       809.14        Primeira vez   Eletrônico          7.0   \n","2  Rio de Janeiro       448.74           Ocasional  Hip-Hop/Rap          4.7   \n","3  Rio de Janeiro       245.24         Veterano(a)          Pop         10.0   \n","4  Rio de Janeiro       245.24         Veterano(a)          Pop         10.0   \n","\n","   satisfacao_festival segmento_mais_lembrado  \n","0                 10.0   Serviços Financeiros  \n","1                 10.0                 Beleza  \n","2                  9.4   Bebida Não Alcoólica  \n","3                  6.5                 Beleza  \n","4                  6.5                 Beleza  \n"]}],"source":["# 2_unificacao.py\n","\n","import pandas as pd\n","import os\n","\n","print(\"--- Iniciando Etapa 2: Unificação dos Dados ---\")\n","\n","# --- 1. Definição dos Caminhos ---\n","INPUT_DIR = \"data/raw\"\n","OUTPUT_DIR = \"data/interim\" # Usaremos um diretório intermediário para os dados processados\n","\n","# Criar o diretório de saída se ele não existir\n","os.makedirs(OUTPUT_DIR, exist_ok=True)\n","\n","# Caminhos dos arquivos de entrada\n","path_b1 = os.path.join(INPUT_DIR, 'base1_participantes.csv')\n","path_b2 = os.path.join(INPUT_DIR, 'base2_marcas.csv')\n","path_b3 = os.path.join(INPUT_DIR, 'base3_redes.csv')\n","path_b4 = os.path.join(INPUT_DIR, 'base4_marca_aberta.csv')\n","\n","# Caminho do arquivo de saída\n","output_path = os.path.join(OUTPUT_DIR, 'dados_unificados_para_processamento.csv')\n","\n","\n","# --- 2. Carregamento dos Dados ---\n","try:\n","    print(f\"Carregando dados de '{path_b1}'...\")\n","    df_participantes = pd.read_csv(path_b1)\n","\n","    print(f\"Carregando dados de '{path_b2}'...\")\n","    df_interacoes = pd.read_csv(path_b2, low_memory=False)\n","\n","    print(f\"Carregando dados de '{path_b3}'...\")\n","    df_redes_sociais = pd.read_csv(path_b3)\n","\n","    print(f\"Carregando dados de '{path_b4}'...\")\n","    df_mencoes = pd.read_csv(path_b4)\n","\n","    print(\"\\nTodos os arquivos foram carregados com sucesso.\")\n","\n","except FileNotFoundError as e:\n","    print(f\"\\nERRO: Arquivo não encontrado. {e}\")\n","    print(\"Por favor, certifique-se de que todos os scripts da etapa '1_geracao' foram executados.\")\n","    exit()\n","\n","# --- 3. Unificação Principal (Junção da Base 1 e Base 2) ---\n","# O \"grão\" da nossa análise principal será a INTERAÇÃO.\n","# Portanto, vamos enriquecer a tabela de interações com os dados dos participantes.\n","# Usamos um left join para garantir que todas as interações sejam mantidas.\n","\n","print(\"\\nUnificando a base de interações com a base de participantes...\")\n","df_principal = pd.merge(\n","    df_interacoes,\n","    df_participantes,\n","    on='id_participante',\n","    how='left'\n",")\n","\n","print(f\"A tabela principal unificada tem {len(df_principal)} linhas e {len(df_principal.columns)} colunas.\")\n","\n","# --- 4. Armazenamento ---\n","# Neste ponto, salvamos a tabela principal unificada.\n","# As outras tabelas (df_redes_sociais e df_mencoes) serão usadas na próxima etapa,\n","# mas não precisam ser juntadas agora para evitar duplicação massiva de dados.\n","\n","print(f\"\\nSalvando a tabela principal unificada em '{output_path}'...\")\n","df_principal.to_csv(output_path, index=False, encoding='utf-8-sig')\n","\n","print(\"\\n--- Etapa 2: Unificação concluída com sucesso! ---\")\n","print(f\"O arquivo principal para a próxima etapa está pronto.\")\n","print(\"\\nAmostra da tabela unificada:\")\n","print(df_principal.head())"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":787,"status":"ok","timestamp":1752709893806,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"AM-t8VzgGsSe","outputId":"f91a684b-f5ea-496c-ba39-3c168d909463"},"outputs":[{"output_type":"stream","name":"stdout","text":["--- Iniciando Etapa 3: Pré-processamento e Limpeza dos Dados ---\n","Carregando dados unificados...\n","Carregando dados de redes sociais...\n","Carregando dados de menções...\n","\n","Arquivos carregados com sucesso.\n","\n","Iniciando limpeza da tabela principal...\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-7-550839838.py:65: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df_principal_limpo['idade'].fillna(mediana_idade, inplace=True)\n","/tmp/ipython-input-7-550839838.py:77: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df_principal_limpo['valor_gasto'].fillna(mediana_gasto, inplace=True)\n","/tmp/ipython-input-7-550839838.py:90: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df_principal_limpo['avaliacao_brinde'].fillna(0, inplace=True)\n","/tmp/ipython-input-7-550839838.py:105: UserWarning: Parsing dates in %d/%m/%Y format when dayfirst=False (the default) was specified. Pass `dayfirst=True` or specify a format to silence this warning.\n","  df_redes_limpo['data_postagem'] = pd.to_datetime(df_redes_limpo['data_postagem'], errors='coerce', dayfirst=False, format=None)\n"]},{"output_type":"stream","name":"stdout","text":["Limpeza da tabela principal concluída.\n","\n","Iniciando limpeza da tabela de redes sociais...\n","Limpeza da tabela de redes sociais concluída.\n","\n","Salvando arquivos processados...\n","Arquivos salvos em 'data/processed'\n","\n","--- Verificação Final da Tabela Principal Limpa ---\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25130 entries, 0 to 25129\n","Data columns (total 18 columns):\n"," #   Column                          Non-Null Count  Dtype  \n","---  ------                          --------------  -----  \n"," 0   id_interacao                    25130 non-null  int64  \n"," 1   id_participante                 25130 non-null  int64  \n"," 2   segmento_interagido             25130 non-null  object \n"," 3   tipo_interacao                  25130 non-null  object \n"," 4   tempo_de_espera                 25130 non-null  int64  \n"," 5   avaliacao_experiencia_ativacao  25130 non-null  int64  \n"," 6   avaliacao_brinde                25130 non-null  float64\n"," 7   satisfacao_segmento             25130 non-null  float64\n"," 8   recomendaria_segmento           25130 non-null  bool   \n"," 9   idade                           25130 non-null  int64  \n"," 10  genero                          25130 non-null  object \n"," 11  localizacao                     25130 non-null  object \n"," 12  valor_gasto                     25130 non-null  float64\n"," 13  frequencia_festival             25130 non-null  object \n"," 14  dia_festival                    25130 non-null  object \n"," 15  nota_lineup                     25130 non-null  float64\n"," 16  satisfacao_festival             25130 non-null  float64\n"," 17  segmento_mais_lembrado          25130 non-null  object \n","dtypes: bool(1), float64(5), int64(5), object(7)\n","memory usage: 3.3+ MB\n","\n","Amostra da tabela principal após a limpeza:\n","   id_interacao  id_participante   segmento_interagido     tipo_interacao  \\\n","0             1                1  Serviços Financeiros   Visita a Estande   \n","1             2                2                Beleza   Visita a Estande   \n","2             3                3  Bebida Não Alcoólica  Compra de Produto   \n","3             4                4                Beleza   Visita a Estande   \n","4             5                4               Seguros  Compra de Produto   \n","\n","   tempo_de_espera  avaliacao_experiencia_ativacao  avaliacao_brinde  \\\n","0               18                               3               2.0   \n","1               20                               4               1.0   \n","2               10                               2               0.0   \n","3               43                               4               2.0   \n","4                8                               1               1.0   \n","\n","   satisfacao_segmento  recomendaria_segmento  idade     genero  \\\n","0                  2.2                  False     31  Masculino   \n","1                  3.1                   True     26  Masculino   \n","2                  1.2                  False     33  Masculino   \n","3                  2.9                   True     40  Masculino   \n","4                  1.0                  False     40  Masculino   \n","\n","      localizacao  valor_gasto frequencia_festival dia_festival  nota_lineup  \\\n","0       São Paulo       372.61        Primeira vez  Hip-Hop/Rap          5.1   \n","1  Rio De Janeiro       809.14        Primeira vez   Eletrônico          7.0   \n","2  Rio De Janeiro       448.74           Ocasional  Hip-Hop/Rap          4.7   \n","3  Rio De Janeiro       245.24         Veterano(a)          Pop         10.0   \n","4  Rio De Janeiro       245.24         Veterano(a)          Pop         10.0   \n","\n","   satisfacao_festival segmento_mais_lembrado  \n","0                 10.0   Serviços Financeiros  \n","1                 10.0                 Beleza  \n","2                  9.4   Bebida Não Alcoólica  \n","3                  6.5                 Beleza  \n","4                  6.5                 Beleza  \n"]}],"source":["# 3_preprocessamento.py\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","\n","print(\"--- Iniciando Etapa 3: Pré-processamento e Limpeza dos Dados ---\")\n","\n","# --- 1. Definição dos Caminhos ---\n","INPUT_DIR = \"data/interim\"\n","RAW_DIR = \"data/raw\"\n","OUTPUT_DIR = \"data/processed\"\n","\n","os.makedirs(OUTPUT_DIR, exist_ok=True)\n","\n","# Caminhos dos arquivos de entrada\n","path_principal = os.path.join(INPUT_DIR, 'dados_unificados_para_processamento.csv')\n","path_redes = os.path.join(RAW_DIR, 'base3_redes.csv')\n","path_mencoes = os.path.join(RAW_DIR, 'base4_marca_aberta.csv')\n","\n","# --- 2. Carregamento dos Dados ---\n","try:\n","    print(\"Carregando dados unificados...\")\n","    df_principal = pd.read_csv(path_principal, low_memory=False)\n","\n","    print(\"Carregando dados de redes sociais...\")\n","    df_redes = pd.read_csv(path_redes)\n","\n","    print(\"Carregando dados de menções...\")\n","    df_mencoes = pd.read_csv(path_mencoes)\n","\n","    print(\"\\nArquivos carregados com sucesso.\")\n","except FileNotFoundError as e:\n","    print(f\"\\nERRO: Arquivo não encontrado. {e}\")\n","    print(\"Certifique-se de que as etapas 1 e 2 foram executadas.\")\n","    exit()\n","\n","\n","# --- 3. Funções de Limpeza (Helpers) ---\n","def padronizar_localizacao(loc):\n","    \"\"\"Padroniza a coluna de localização, corrigindo abreviações e capitalização.\"\"\"\n","    if pd.isna(loc): return None\n","    loc = str(loc).strip().lower()\n","    mapeamento = {'rj': 'Rio de Janeiro', 'sao paulo': 'São Paulo', 'bh': 'Belo Horizonte'}\n","    return mapeamento.get(loc, loc.title())\n","\n","def limpar_metricas_k(valor):\n","    \"\"\"Converte métricas de texto com 'k' (e.g., '15.2k') em valores numéricos.\"\"\"\n","    if isinstance(valor, str):\n","        valor = valor.lower()\n","        if 'k' in valor:\n","            return float(valor.replace('k', '')) * 1000\n","    return pd.to_numeric(valor, errors='coerce')\n","\n","# --- 4. Processamento da Tabela Principal ---\n","print(\"\\nIniciando limpeza da tabela principal...\")\n","df_principal_limpo = df_principal.copy()\n","\n","# Tratamento da coluna 'idade'\n","# Converte para numérico, tratando erros que foram inseridos propositalmente.\n","if 'idade' in df_principal_limpo.columns:\n","    df_principal_limpo['idade'] = pd.to_numeric(df_principal_limpo['idade'], errors='coerce')\n","    # Imputa a mediana para quaisquer valores que não puderam ser convertidos\n","    mediana_idade = df_principal_limpo['idade'].median()\n","    df_principal_limpo['idade'].fillna(mediana_idade, inplace=True)\n","    df_principal_limpo['idade'] = df_principal_limpo['idade'].astype(int)\n","\n","# Tratamento da coluna 'localizacao'\n","# Aplica a função de padronização para unificar os nomes das cidades.\n","if 'localizacao' in df_principal_limpo.columns:\n","    df_principal_limpo['localizacao'] = df_principal_limpo['localizacao'].apply(padronizar_localizacao)\n","\n","# Tratamento da coluna 'valor_gasto' (antiga renda_mensal)\n","# Imputa a mediana para preencher valores ausentes (NaN).\n","if 'valor_gasto' in df_principal_limpo.columns:\n","    mediana_gasto = df_principal_limpo['valor_gasto'].median()\n","    df_principal_limpo['valor_gasto'].fillna(mediana_gasto, inplace=True)\n","else:\n","    print(\"Aviso: Coluna 'valor_gasto' não encontrada na tabela principal.\")\n","\n","# Tratamento da coluna 'tempo_de_espera'\n","# Remove o sufixo \"min\" e converte a coluna para o tipo numérico.\n","if 'tempo_de_espera' in df_principal_limpo.columns:\n","    df_principal_limpo['tempo_de_espera'] = df_principal_limpo['tempo_de_espera'].astype(str).str.replace('min', '', regex=False).str.strip()\n","    df_principal_limpo['tempo_de_espera'] = pd.to_numeric(df_principal_limpo['tempo_de_espera'], errors='coerce')\n","\n","# Tratamento da coluna 'avaliacao_brinde'\n","# Imputa 0 nos valores nulos, representando explicitamente a ausência de brinde.\n","if 'avaliacao_brinde' in df_principal_limpo.columns:\n","    df_principal_limpo['avaliacao_brinde'].fillna(0, inplace=True)\n","\n","# Tratamento da coluna 'satisfacao_segmento'\n","# Aplica a técnica de \"clipping\" para corrigir outliers e garantir que os valores fiquem na escala de 1 a 5.\n","if 'satisfacao_segmento' in df_principal_limpo.columns:\n","    df_principal_limpo['satisfacao_segmento'] = df_principal_limpo['satisfacao_segmento'].clip(lower=1, upper=5)\n","\n","print(\"Limpeza da tabela principal concluída.\")\n","\n","# --- 5. Processamento da Tabela de Redes Sociais ---\n","print(\"\\nIniciando limpeza da tabela de redes sociais...\")\n","df_redes_limpo = df_redes.copy()\n","\n","# Tratamento da coluna 'data_postagem'\n","# Converte os formatos mistos (ISO e brasileiro) para um tipo datetime padronizado.\n","df_redes_limpo['data_postagem'] = pd.to_datetime(df_redes_limpo['data_postagem'], errors='coerce', dayfirst=False, format=None)\n","\n","# Tratamento das colunas de métricas\n","# Aplica a função de limpeza para converter valores como \"37.8k\" em 37800.\n","df_redes_limpo['curtidas'] = df_redes_limpo['curtidas'].apply(limpar_metricas_k)\n","df_redes_limpo['comentarios'] = df_redes_limpo['comentarios'].apply(limpar_metricas_k)\n","df_redes_limpo['compartilhamentos'] = pd.to_numeric(df_redes_limpo['compartilhamentos'], errors='coerce')\n","\n","print(\"Limpeza da tabela de redes sociais concluída.\")\n","\n","# --- 6. Salvando os Dados Processados ---\n","print(\"\\nSalvando arquivos processados...\")\n","\n","path_principal_limpo = os.path.join(OUTPUT_DIR, 'dados_principais_limpos.csv')\n","df_principal_limpo.to_csv(path_principal_limpo, index=False, encoding='utf-8-sig')\n","\n","path_redes_limpo = os.path.join(OUTPUT_DIR, 'dados_redes_limpos.csv')\n","df_redes_limpo.to_csv(path_redes_limpo, index=False, encoding='utf-8-sig')\n","\n","# A base de menções é salva sem grandes alterações estruturais, pronta para o NLP.\n","path_mencoes_processado = os.path.join(OUTPUT_DIR, 'dados_mencoes_para_nlp.csv')\n","df_mencoes.to_csv(path_mencoes_processado, index=False, encoding='utf-8-sig')\n","\n","print(f\"Arquivos salvos em '{OUTPUT_DIR}'\")\n","\n","# --- 7. Verificação Final ---\n","print(\"\\n--- Verificação Final da Tabela Principal Limpa ---\")\n","df_principal_limpo.info()\n","\n","print(\"\\nAmostra da tabela principal após a limpeza:\")\n","print(df_principal_limpo.head())"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":99577,"status":"ok","timestamp":1752709993392,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"},"user_tz":180},"id":"FGgqaOy1HwRd","outputId":"1fca7d77-c0a4-4665-c367-d764a1622ede"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pysentimiento\n","  Downloading pysentimiento-0.7.3-py3-none-any.whl.metadata (7.7 kB)\n","Requirement already satisfied: accelerate>=0.27.2 in /usr/local/lib/python3.11/dist-packages (from pysentimiento) (1.8.1)\n","Requirement already satisfied: datasets>=2.10.1 in /usr/local/lib/python3.11/dist-packages (from pysentimiento) (2.14.4)\n","Collecting emoji>=1.6.1 (from pysentimiento)\n","  Downloading emoji-2.14.1-py3-none-any.whl.metadata (5.7 kB)\n","Requirement already satisfied: spacy>=3.5.0 in /usr/local/lib/python3.11/dist-packages (from pysentimiento) (3.8.7)\n","Requirement already satisfied: torch!=2.0.1,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from pysentimiento) (2.6.0+cu124)\n","Requirement already satisfied: transformers>=4.13.0 in /usr/local/lib/python3.11/dist-packages (from pysentimiento) (4.53.2)\n","Requirement already satisfied: numpy<3.0.0,>=1.17 in /usr/local/lib/python3.11/dist-packages (from accelerate>=0.27.2->pysentimiento) (2.0.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from accelerate>=0.27.2->pysentimiento) (24.2)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from accelerate>=0.27.2->pysentimiento) (5.9.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.11/dist-packages (from accelerate>=0.27.2->pysentimiento) (6.0.2)\n","Requirement already satisfied: huggingface_hub>=0.21.0 in /usr/local/lib/python3.11/dist-packages (from accelerate>=0.27.2->pysentimiento) (0.33.4)\n","Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from accelerate>=0.27.2->pysentimiento) (0.5.3)\n","Requirement already satisfied: pyarrow>=8.0.0 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (18.1.0)\n","Requirement already satisfied: dill<0.3.8,>=0.3.0 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (0.3.7)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (2.2.2)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (2.32.3)\n","Requirement already satisfied: tqdm>=4.62.1 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (4.67.1)\n","Requirement already satisfied: xxhash in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (3.5.0)\n","Requirement already satisfied: multiprocess in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (0.70.15)\n","Requirement already satisfied: fsspec>=2021.11.1 in /usr/local/lib/python3.11/dist-packages (from fsspec[http]>=2021.11.1->datasets>=2.10.1->pysentimiento) (2025.3.2)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.11/dist-packages (from datasets>=2.10.1->pysentimiento) (3.11.15)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (3.0.12)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (1.0.5)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (1.0.13)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (2.0.11)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (3.0.10)\n","Requirement already satisfied: thinc<8.4.0,>=8.3.4 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (8.3.6)\n","Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (1.1.3)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (2.5.1)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (2.0.10)\n","Requirement already satisfied: weasel<0.5.0,>=0.1.0 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (0.4.1)\n","Requirement already satisfied: typer<1.0.0,>=0.3.0 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (0.16.0)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (2.11.7)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (3.1.6)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (75.2.0)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.11/dist-packages (from spacy>=3.5.0->pysentimiento) (3.5.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (3.18.0)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (4.14.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (3.5)\n","Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cublas-cu12==12.4.5.8 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cufft-cu12==11.2.1.3 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-curand-cu12==10.3.5.147 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (0.6.2)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (12.4.127)\n","Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch!=2.0.1,>=2.0.0->pysentimiento)\n","  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (3.2.0)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch!=2.0.1,>=2.0.0->pysentimiento) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch!=2.0.1,>=2.0.0->pysentimiento) (1.3.0)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers>=4.13.0->pysentimiento) (2024.11.6)\n","Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers>=4.13.0->pysentimiento) (0.21.2)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (2.6.1)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (1.4.0)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (25.3.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (1.7.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (6.6.3)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (0.3.2)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.10.1->pysentimiento) (1.20.1)\n","Requirement already satisfied: hf-xet<2.0.0,>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub>=0.21.0->accelerate>=0.27.2->pysentimiento) (1.1.5)\n","Requirement already satisfied: language-data>=1.2 in /usr/local/lib/python3.11/dist-packages (from langcodes<4.0.0,>=3.2.0->spacy>=3.5.0->pysentimiento) (1.3.0)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy>=3.5.0->pysentimiento) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy>=3.5.0->pysentimiento) (2.33.2)\n","Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy>=3.5.0->pysentimiento) (0.4.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->datasets>=2.10.1->pysentimiento) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->datasets>=2.10.1->pysentimiento) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->datasets>=2.10.1->pysentimiento) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->datasets>=2.10.1->pysentimiento) (2025.7.14)\n","Requirement already satisfied: blis<1.4.0,>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from thinc<8.4.0,>=8.3.4->spacy>=3.5.0->pysentimiento) (1.3.0)\n","Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.11/dist-packages (from thinc<8.4.0,>=8.3.4->spacy>=3.5.0->pysentimiento) (0.1.5)\n","Requirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.11/dist-packages (from typer<1.0.0,>=0.3.0->spacy>=3.5.0->pysentimiento) (8.2.1)\n","Requirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from typer<1.0.0,>=0.3.0->spacy>=3.5.0->pysentimiento) (1.5.4)\n","Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.11/dist-packages (from typer<1.0.0,>=0.3.0->spacy>=3.5.0->pysentimiento) (13.9.4)\n","Requirement already satisfied: cloudpathlib<1.0.0,>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from weasel<0.5.0,>=0.1.0->spacy>=3.5.0->pysentimiento) (0.21.1)\n","Requirement already satisfied: smart-open<8.0.0,>=5.2.1 in /usr/local/lib/python3.11/dist-packages (from weasel<0.5.0,>=0.1.0->spacy>=3.5.0->pysentimiento) (7.3.0.post1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->spacy>=3.5.0->pysentimiento) (3.0.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets>=2.10.1->pysentimiento) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets>=2.10.1->pysentimiento) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets>=2.10.1->pysentimiento) (2025.2)\n","Requirement already satisfied: marisa-trie>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from language-data>=1.2->langcodes<4.0.0,>=3.2.0->spacy>=3.5.0->pysentimiento) (1.2.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas->datasets>=2.10.1->pysentimiento) (1.17.0)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy>=3.5.0->pysentimiento) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy>=3.5.0->pysentimiento) (2.19.2)\n","Requirement already satisfied: wrapt in /usr/local/lib/python3.11/dist-packages (from smart-open<8.0.0,>=5.2.1->weasel<0.5.0,>=0.1.0->spacy>=3.5.0->pysentimiento) (1.17.2)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy>=3.5.0->pysentimiento) (0.1.2)\n","Downloading pysentimiento-0.7.3-py3-none-any.whl (39 kB)\n","Downloading emoji-2.14.1-py3-none-any.whl (590 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m590.6/590.6 kB\u001b[0m \u001b[31m17.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m80.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m68.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m44.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m11.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m70.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, emoji, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, pysentimiento\n","  Attempting uninstall: nvidia-nvjitlink-cu12\n","    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n","    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n","      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n","  Attempting uninstall: nvidia-curand-cu12\n","    Found existing installation: nvidia-curand-cu12 10.3.6.82\n","    Uninstalling nvidia-curand-cu12-10.3.6.82:\n","      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n","  Attempting uninstall: nvidia-cufft-cu12\n","    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n","    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n","      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n","  Attempting uninstall: nvidia-cuda-runtime-cu12\n","    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n","    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n","    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n","    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-cupti-cu12\n","    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n","    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n","  Attempting uninstall: nvidia-cublas-cu12\n","    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n","    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n","      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n","  Attempting uninstall: nvidia-cusparse-cu12\n","    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n","    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n","      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n","  Attempting uninstall: nvidia-cudnn-cu12\n","    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n","    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n","      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n","  Attempting uninstall: nvidia-cusolver-cu12\n","    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n","    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n","      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n","Successfully installed emoji-2.14.1 nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127 pysentimiento-0.7.3\n"]}],"source":["!pip install pysentimiento"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["b9af7d05962140c48a359ea741023189","ad48dc8a165e4c8c9e2d0c548bbf2458","049d6057a4e348c0941b8a867b8ca334","e676a40651654619841a8a8c11079d29","4b25aa8acbdb4c17b2e2db87cee382b4","feb70aa0e28747009b76a4d3457a6a6a","5a82f0b3c2244d909c33317ba07d64ce","e35aeb3d853c42c0a8094f8d1225c5b2","2a668d548cf0410481259e7a75fccf85","978e40f6a2644c7ab5770e7e0d99e495","09d95890d7f9401fb47890f7b2e5adc5","871dc936977f4f62baf26d4da285ea21","2471d4d461c44008b65fd78f8a97966d","012e19b946784ea8aceb721a09cac656","b743aa0900aa40cb86ecc24ada3c3fc8","e7ae79127e7b47a8a107d6886b8b7833","7dcaba3a8fc74c1589b12bb91e013839","a13c4c49c02940f990f2fd974d8f0476","4f6c65951b074fc0b1aa4e21eef4f619","c0e8d5b5ce034e2f8e552c11bd8d397e","c7d0423780164bb99c1d07de379e05be","63620c26702047d39c3d3c3e2b12dd13","e70acb79bb894479a152529a8662a776","38eddaa178b24efdaef73e4a1f57cb1d","b56f256fa80640cc9d777fd263a3fe52","451bd9f3f11a449da393391ad913bbe7","fd2f2e5a68a04c20a2eb8e4ec54cf25a","b8ea5ce8b4064e3a8d6ea8baefefafa1","efc6b8c07d0e4be98a7d106213ac90ef","92f05e685f5c49a18925c6386ae92630","ff0a0defad614a53a3d7e4a164f5f6b8","09fcc159f1134b4383063f770bdb2887","2837d58354a54900b5f586f5711b9999","03f963eb581447ac93e05ad50892a167","e37bacd90d4f4015a09bb5a4d0c444b3","562e365fd6754bef853630c0cac4ec59","46b1ac7c0ad2483aac34b612134358d7","5fcbee18119c4df9a0df4a96e77eb699","9f522d8f059f46c7a415d4657023e995","74fa5eb326cb4d6d9b195a17fcab86d2","e0b272bd200e46908ed9ee005a262d2a","ea8e6c15414045028557db4c206286e6","33130e17e51b46e7895d08dc18bb1dc5","dfaff96579a14db68055b5d6def7a0eb","2182a3967d184770a5dfe6ae95e76c9d","2814e5b6f4524473aee6e349ee0e520c","86352508dc0a40ae821149d8d8b5d17a","4b745750798945408bbcb2bad6efc71b","93a29f3a32694d528f1ecdf600a05f35","1f519309a50b414ba79aaa9b69958d71","7e2522fdf32a4636ad06babec7f98ace","97c2091a0a134be6bf1c3bf960751a83","cb7a30df63084d2f8c33e9d689b75f92","d7c16551ba0940a0b116460af052db41","ece0cebe2e5141abb2eee45e5ad6e2db","d2f7b415538b4662b045f79199024e6e","f6e2a6942bc24219aecea08b27a11337","e3709681a4d5417eae3d230cd77f2a5b","6c5fd8654f424f3f872c7846d82ba196","6092627473d94ce885efe8675e82a0d5","55efaae9d713480d877355100f4e780e","9b5d50e77b464ecea67294d6c99dd8cb","6792415b82bb46babe5d16e755931c4d","5737d3a75e014116a08ad8f1a703b4c0","f25beaa77c0a46b6b47097c43762499c","610b5f90fa454eb182d96ff17ed8e79c","0907bd6597ce452d86f7207d85b74cd0","bb938ca534bd4416820f18fca749c819","8d58374741b640a496e25d2acea70f4f","686db5cd28f14c44b8bc22441234e12e","90193bab201a43baab9921016cd4cebf","c054c6b5a5e24c3f83b90f5d196ca492","6f002c0c97f24bdbaf6c7e2cbd903f62","b2082f6f98344da1aaefde436d93270a","884ae8a0d24540b4adeaf30fdadf5c64","73403beca3a141869b01693fbfab0411","c764bd6cd9334b03bceff7be463ff8ad"]},"id":"g1hNWDJQH2We","executionInfo":{"status":"ok","timestamp":1752710390885,"user_tz":180,"elapsed":397486,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"}},"outputId":"6e79a817-125b-4d9f-9d61-d009f3bdce6b"},"outputs":[{"output_type":"stream","name":"stdout","text":["--- Iniciando Etapa 4: Enriquecimento de Dados (com Modelo de NLP Aprimorado) ---\n","Carregando dados processados...\n","Dados carregados com sucesso.\n","\n","Enriquecendo a tabela principal com novas features...\n","Novas features criadas na tabela principal.\n","\n","Iniciando análise de sentimento com o modelo 'pysentimiento'...\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/952 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b9af7d05962140c48a359ea741023189"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/540M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"871dc936977f4f62baf26d4da285ea21"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/562 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e70acb79bb894479a152529a8662a776"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"03f963eb581447ac93e05ad50892a167"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["bpe.codes: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2182a3967d184770a5dfe6ae95e76c9d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["added_tokens.json:   0%|          | 0.00/22.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d2f7b415538b4662b045f79199024e6e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/167 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0907bd6597ce452d86f7207d85b74cd0"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Calculando sentimento para cada post (pode levar alguns minutos)...\n","Calculando pontuação de polaridade...\n","Análise de sentimento aprimorada concluída.\n","\n","Salvando arquivos finais no diretório 'gold'...\n","Arquivos salvos em 'data/gold'\n","\n","--- Verificação da Tabela Principal Enriquecida ---\n","   idade        faixa_etaria    perfil_participante\n","0     31      Adulto (26-35)  Veterano Insatisfeito\n","1     26      Adulto (26-35)  Veterano Insatisfeito\n","2     33      Adulto (26-35)  Veterano Insatisfeito\n","3     40  Meia-idade (36-45)  Veterano Insatisfeito\n","4     40  Meia-idade (36-45)  Veterano Insatisfeito\n","\n","--- Verificação da Tabela de Menções Enriquecida (NLP Aprimorado) ---\n","    tema_conteudo sentimento_calculado  polaridade_calculada  \\\n","784    reclamacao             Negativo             -0.978758   \n","900    reclamacao             Negativo             -0.988065   \n","413        elogio             Positivo              0.913464   \n","467    reclamacao             Negativo             -0.981570   \n","746    reclamacao             Negativo             -0.988726   \n","\n","                                         conteudo_post  \n","784  Absurdo o tempo de espera na fila de Bebida Al...  \n","900  Totalmente decepcionado com a ativação de Bebi...  \n","413  Que organização incrível no espaço de Bebida A...  \n","467  Absurdo o tempo de espera na fila de Bebida Al...  \n","746  Totalmente decepcionado com a ativação de Bebi...  \n","\n","--- Comparação: Tema Original vs. Sentimento Calculado (Modelo Aprimorado) ---\n","sentimento_calculado  Negativo  Neutro  Positivo\n","tema_conteudo                                   \n","elogio                       0       0        45\n","neutro                      32     321        40\n","reclamacao                 697       0         0\n"]}],"source":["# 4_enriquecimento.py\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import re\n","# Importando a nova biblioteca para análise de sentimento\n","from pysentimiento import create_analyzer\n","\n","print(\"--- Iniciando Etapa 4: Enriquecimento de Dados (com Modelo de NLP Aprimorado) ---\")\n","\n","# --- 1. Definição dos Caminhos ---\n","INPUT_DIR = \"data/processed\"\n","OUTPUT_DIR = \"data/gold\"\n","\n","os.makedirs(OUTPUT_DIR, exist_ok=True)\n","\n","# Caminhos dos arquivos de entrada\n","path_principal = os.path.join(INPUT_DIR, 'dados_principais_limpos.csv')\n","path_redes = os.path.join(INPUT_DIR, 'dados_redes_limpos.csv')\n","path_mencoes = os.path.join(INPUT_DIR, 'dados_mencoes_para_nlp.csv')\n","\n","# --- 2. Carregamento dos Dados Limpos ---\n","try:\n","    print(\"Carregando dados processados...\")\n","    df_principal = pd.read_csv(path_principal)\n","    df_redes = pd.read_csv(path_redes)\n","    df_mencoes = pd.read_csv(path_mencoes)\n","    print(\"Dados carregados com sucesso.\")\n","except FileNotFoundError as e:\n","    print(f\"\\nERRO: Arquivo não encontrado. {e}\")\n","    print(\"Certifique-se de que a etapa 3 foi executada.\")\n","    exit()\n","\n","# --- 3. Enriquecimento da Tabela Principal (Feature Engineering) ---\n","print(\"\\nEnriquecendo a tabela principal com novas features...\")\n","df_principal_enriquecido = df_principal.copy()\n","\n","# Criando 'faixa_etaria'\n","bins = [17, 25, 35, 45, 66]\n","labels = ['Jovem (18-25)', 'Adulto (26-35)', 'Meia-idade (36-45)', 'Sênior (46+)']\n","df_principal_enriquecido['faixa_etaria'] = pd.cut(df_principal_enriquecido['idade'], bins=bins, labels=labels, right=True)\n","\n","# Criando 'perfil_participante'\n","def criar_perfil(row):\n","    satisfacao = row['satisfacao_segmento']\n","    frequencia = row['frequencia_festival']\n","    if frequencia == '1ª vez':\n","        return 'Novato Satisfeito' if satisfacao >= 4 else 'Novato Insatisfeito'\n","    else:\n","        return 'Veterano Satisfeito' if satisfacao >= 4 else 'Veterano Insatisfeito'\n","\n","df_principal_enriquecido['perfil_participante'] = df_principal_enriquecido.apply(criar_perfil, axis=1)\n","\n","print(\"Novas features criadas na tabela principal.\")\n","\n","\n","# --- 4. Enriquecimento da Tabela de Menções (Análise de Sentimento com pysentimiento) ---\n","print(\"\\nIniciando análise de sentimento com o modelo 'pysentimiento'...\")\n","df_mencoes_enriquecido = df_mencoes.copy()\n","\n","# Inicializando o analisador de sentimento para português\n","# Na primeira execução, ele pode fazer o download do modelo (pode levar um minuto)\n","try:\n","    analyzer = create_analyzer(task=\"sentiment\", lang=\"pt\")\n","except Exception as e:\n","    print(f\"Erro ao criar o analisador de sentimento: {e}\")\n","    print(\"Isso pode ocorrer devido a problemas de rede ou dependências. Tente executar a célula de instalação novamente.\")\n","    exit()\n","\n","# Função para obter e classificar o sentimento\n","def obter_sentimento_pysentimiento(texto):\n","    resultado = analyzer.predict(texto)\n","    # O resultado.output é a classificação: POS, NEU, NEG\n","    # Vamos mapear para os nossos termos\n","    mapeamento = {'POS': 'Positivo', 'NEU': 'Neutro', 'NEG': 'Negativo'}\n","    return mapeamento.get(resultado.output, 'Neutro')\n","\n","def obter_polaridade_pysentimiento(texto):\n","    resultado = analyzer.predict(texto)\n","    # A polaridade é uma probabilidade para cada classe.\n","    # Vamos criar uma pontuação simples: P(POS) - P(NEG)\n","    return resultado.probas.get('POS', 0) - resultado.probas.get('NEG', 0)\n","\n","\n","# Aplicando as funções\n","print(\"Calculando sentimento para cada post (pode levar alguns minutos)...\")\n","df_mencoes_enriquecido['sentimento_calculado'] = df_mencoes_enriquecido['conteudo_post'].apply(obter_sentimento_pysentimiento)\n","\n","print(\"Calculando pontuação de polaridade...\")\n","df_mencoes_enriquecido['polaridade_calculada'] = df_mencoes_enriquecido['conteudo_post'].apply(obter_polaridade_pysentimiento)\n","\n","\n","print(\"Análise de sentimento aprimorada concluída.\")\n","\n","\n","# --- 5. Salvando os Dados Enriquecidos (GOLD) ---\n","print(\"\\nSalvando arquivos finais no diretório 'gold'...\")\n","# (O código de salvamento permanece o mesmo)\n","path_principal_gold = os.path.join(OUTPUT_DIR, 'dados_principais_gold.csv')\n","df_principal_enriquecido.to_csv(path_principal_gold, index=False, encoding='utf-8-sig')\n","\n","path_redes_gold = os.path.join(OUTPUT_DIR, 'dados_redes_gold.csv')\n","df_redes.to_csv(path_redes_gold, index=False, encoding='utf-8-sig')\n","\n","path_mencoes_gold = os.path.join(OUTPUT_DIR, 'dados_mencoes_gold.csv')\n","df_mencoes_enriquecido.to_csv(path_mencoes_gold, index=False, encoding='utf-8-sig')\n","\n","print(f\"Arquivos salvos em '{OUTPUT_DIR}'\")\n","\n","\n","# --- 6. Verificação Final ---\n","print(\"\\n--- Verificação da Tabela Principal Enriquecida ---\")\n","print(df_principal_enriquecido[['idade', 'faixa_etaria', 'perfil_participante']].head())\n","\n","print(\"\\n--- Verificação da Tabela de Menções Enriquecida (NLP Aprimorado) ---\")\n","print(df_mencoes_enriquecido[['tema_conteudo', 'sentimento_calculado', 'polaridade_calculada', 'conteudo_post']].sample(5, random_state=42))\n","\n","print(\"\\n--- Comparação: Tema Original vs. Sentimento Calculado (Modelo Aprimorado) ---\")\n","print(pd.crosstab(df_mencoes_enriquecido['tema_conteudo'], df_mencoes_enriquecido['sentimento_calculado']))"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"asz55P1AjZTY","executionInfo":{"status":"ok","timestamp":1752710419166,"user_tz":180,"elapsed":28275,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"}},"outputId":"cfa0ed3a-3a58-4f7f-f0a7-d3f6f9c58112"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pyarrow in /usr/local/lib/python3.11/dist-packages (18.1.0)\n","Requirement already satisfied: openpyxl in /usr/local/lib/python3.11/dist-packages (3.1.5)\n","Requirement already satisfied: et-xmlfile in /usr/local/lib/python3.11/dist-packages (from openpyxl) (2.0.0)\n"]}],"source":["# Execute este bloco primeiro para instalar a biblioteca para trabalhar com o formato Parquet\n","!pip install pyarrow\n","# Instalação da biblioteca para manipulação de arquivos excel\n","!pip install openpyxl"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XvgWMWDtjffy","executionInfo":{"status":"ok","timestamp":1752710454337,"user_tz":180,"elapsed":35167,"user":{"displayName":"Rafael Scolarique","userId":"03606205332966806927"}},"outputId":"3594cfd7-7bcb-4006-a348-e91ef082f15d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Montando o Google Drive...\n","Mounted at /content/drive\n","Google Drive montado com sucesso!\n","\n","--- Iniciando Etapa 5: Armazenamento Otimizado no Google Drive ---\n","Diretório de saída configurado para: /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics\n","\n","Iniciando a conversão dos arquivos 'gold' para Parquet e Excel...\n","\n","Lendo o arquivo: data/gold/dados_principais_gold.csv\n","--> Salvando em formato otimizado (Parquet): /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics/dados_principais.parquet\n","--> Exportando para consumo humano (Excel): /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics/dados_principais.xlsx\n","\n","Lendo o arquivo: data/gold/dados_redes_gold.csv\n","--> Salvando em formato otimizado (Parquet): /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics/dados_redes.parquet\n","--> Exportando para consumo humano (Excel): /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics/dados_redes.xlsx\n","\n","Lendo o arquivo: data/gold/dados_mencoes_gold.csv\n","--> Salvando em formato otimizado (Parquet): /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics/dados_mencoes.parquet\n","--> Exportando para consumo humano (Excel): /content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics/dados_mencoes.xlsx\n","\n","--- Pipeline de Dados Concluído! ---\n","Os arquivos finais foram salvos no seu Google Drive.\n","\n","--- Verificação dos Arquivos Finais no Google Drive ---\n","Conteúdo do diretório de saída '/content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados/data/analytics':\n","- dados_principais.parquet\n","- dados_principais.xlsx\n","- dados_redes.parquet\n","- dados_redes.xlsx\n","- dados_mencoes.parquet\n","- dados_mencoes.xlsx\n"]}],"source":["# 5_armazenamento.py\n","\n","import pandas as pd\n","import os\n","from google.colab import drive\n","\n","# --- 1. Montagem do Google Drive ---\n","# Este passo é essencial para conectar o Colab ao seu Drive.\n","# Ele deve ser executado para que o código possa encontrar a pasta de destino.\n","print(\"Montando o Google Drive...\")\n","try:\n","    drive.mount('/content/drive', force_remount=True)\n","    print(\"Google Drive montado com sucesso!\")\n","except Exception as e:\n","    print(f\"Erro ao montar o Google Drive: {e}\")\n","    # Se a montagem falhar, o script não pode continuar, então paramos aqui.\n","    exit()\n","\n","# --- 2. Definição dos Caminhos ---\n","print(\"\\n--- Iniciando Etapa 5: Armazenamento Otimizado no Google Drive ---\")\n","\n","# O diretório de entrada continua sendo a pasta temporária do Colab\n","INPUT_DIR = \"data/gold\"\n","\n","# ###########################################################################\n","# # PONTO DE ALTERAÇÃO: COLOQUE O CAMINHO DA SUA PASTA AQUI                 #\n","# ###########################################################################\n","# Substitua a string abaixo pelo caminho que você copiou do painel de arquivos.\n","# Exemplo: '/content/drive/MyDrive/TCC/Meu_Projeto'\n","GDRIVE_PROJECT_PATH = '/content/drive/MyDrive/MBA BI - USP/TCC/TCC - ENTREGAS/Base de dados'\n","\n","# O código criará as subpastas 'data/analytics' dentro do caminho acima.\n","OUTPUT_DIR = os.path.join(GDRIVE_PROJECT_PATH, \"data/analytics\")\n","\n","# Garante que o diretório de saída exista no seu Google Drive.\n","os.makedirs(OUTPUT_DIR, exist_ok=True)\n","print(f\"Diretório de saída configurado para: {OUTPUT_DIR}\")\n","\n","\n","# --- 3. Processamento e Salvamento dos Arquivos ---\n","\n","# Dicionário com os nomes dos arquivos a serem processados\n","files_to_process = {\n","    \"dados_principais_gold.csv\": \"dados_principais\",\n","    \"dados_redes_gold.csv\": \"dados_redes\",\n","    \"dados_mencoes_gold.csv\": \"dados_mencoes\"\n","}\n","\n","print(\"\\nIniciando a conversão dos arquivos 'gold' para Parquet e Excel...\")\n","\n","for csv_file, base_name in files_to_process.items():\n","    input_path = os.path.join(INPUT_DIR, csv_file)\n","\n","    try:\n","        print(f\"\\nLendo o arquivo: {input_path}\")\n","        df = pd.read_csv(input_path)\n","\n","        # --- Salvando em formato Parquet no Google Drive ---\n","        parquet_path = os.path.join(OUTPUT_DIR, f\"{base_name}.parquet\")\n","        print(f\"--> Salvando em formato otimizado (Parquet): {parquet_path}\")\n","        df.to_parquet(parquet_path, index=False)\n","\n","        # --- Exportando para formato Excel no Google Drive ---\n","        excel_path = os.path.join(OUTPUT_DIR, f\"{base_name}.xlsx\")\n","        print(f\"--> Exportando para consumo humano (Excel): {excel_path}\")\n","        df.to_excel(excel_path, index=False, engine='openpyxl')\n","\n","    except FileNotFoundError:\n","        print(f\"AVISO: Arquivo de entrada '{input_path}' não encontrado. Pulando este arquivo.\")\n","    except Exception as e:\n","        print(f\"Ocorreu um erro ao processar {csv_file}: {e}\")\n","\n","print(\"\\n--- Pipeline de Dados Concluído! ---\")\n","print(\"Os arquivos finais foram salvos no seu Google Drive.\")\n","\n","# --- 4. Verificação Final (Opcional, mas recomendado) ---\n","print(\"\\n--- Verificação dos Arquivos Finais no Google Drive ---\")\n","print(f\"Conteúdo do diretório de saída '{OUTPUT_DIR}':\")\n","try:\n","    # Lista os arquivos no diretório de destino para confirmar que foram criados\n","    final_files = os.listdir(OUTPUT_DIR)\n","    if not final_files:\n","        print(\"Nenhum arquivo encontrado. Verifique se as etapas anteriores foram executadas corretamente.\")\n","    else:\n","        for f in final_files:\n","            print(f\"- {f}\")\n","except Exception as e:\n","    print(f\"Não foi possível listar os arquivos: {e}\")"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOVcXOt72rcc2QS5s1DS9Rd"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"b9af7d05962140c48a359ea741023189":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ad48dc8a165e4c8c9e2d0c548bbf2458","IPY_MODEL_049d6057a4e348c0941b8a867b8ca334","IPY_MODEL_e676a40651654619841a8a8c11079d29"],"layout":"IPY_MODEL_4b25aa8acbdb4c17b2e2db87cee382b4"}},"ad48dc8a165e4c8c9e2d0c548bbf2458":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_feb70aa0e28747009b76a4d3457a6a6a","placeholder":"​","style":"IPY_MODEL_5a82f0b3c2244d909c33317ba07d64ce","value":"config.json: 100%"}},"049d6057a4e348c0941b8a867b8ca334":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e35aeb3d853c42c0a8094f8d1225c5b2","max":952,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2a668d548cf0410481259e7a75fccf85","value":952}},"e676a40651654619841a8a8c11079d29":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_978e40f6a2644c7ab5770e7e0d99e495","placeholder":"​","style":"IPY_MODEL_09d95890d7f9401fb47890f7b2e5adc5","value":" 952/952 [00:00&lt;00:00, 47.7kB/s]"}},"4b25aa8acbdb4c17b2e2db87cee382b4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"feb70aa0e28747009b76a4d3457a6a6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5a82f0b3c2244d909c33317ba07d64ce":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e35aeb3d853c42c0a8094f8d1225c5b2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2a668d548cf0410481259e7a75fccf85":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"978e40f6a2644c7ab5770e7e0d99e495":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"09d95890d7f9401fb47890f7b2e5adc5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"871dc936977f4f62baf26d4da285ea21":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2471d4d461c44008b65fd78f8a97966d","IPY_MODEL_012e19b946784ea8aceb721a09cac656","IPY_MODEL_b743aa0900aa40cb86ecc24ada3c3fc8"],"layout":"IPY_MODEL_e7ae79127e7b47a8a107d6886b8b7833"}},"2471d4d461c44008b65fd78f8a97966d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7dcaba3a8fc74c1589b12bb91e013839","placeholder":"​","style":"IPY_MODEL_a13c4c49c02940f990f2fd974d8f0476","value":"model.safetensors: 100%"}},"012e19b946784ea8aceb721a09cac656":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4f6c65951b074fc0b1aa4e21eef4f619","max":539646660,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c0e8d5b5ce034e2f8e552c11bd8d397e","value":539646660}},"b743aa0900aa40cb86ecc24ada3c3fc8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c7d0423780164bb99c1d07de379e05be","placeholder":"​","style":"IPY_MODEL_63620c26702047d39c3d3c3e2b12dd13","value":" 540M/540M [00:10&lt;00:00, 32.3MB/s]"}},"e7ae79127e7b47a8a107d6886b8b7833":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7dcaba3a8fc74c1589b12bb91e013839":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a13c4c49c02940f990f2fd974d8f0476":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4f6c65951b074fc0b1aa4e21eef4f619":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c0e8d5b5ce034e2f8e552c11bd8d397e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c7d0423780164bb99c1d07de379e05be":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"63620c26702047d39c3d3c3e2b12dd13":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e70acb79bb894479a152529a8662a776":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_38eddaa178b24efdaef73e4a1f57cb1d","IPY_MODEL_b56f256fa80640cc9d777fd263a3fe52","IPY_MODEL_451bd9f3f11a449da393391ad913bbe7"],"layout":"IPY_MODEL_fd2f2e5a68a04c20a2eb8e4ec54cf25a"}},"38eddaa178b24efdaef73e4a1f57cb1d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b8ea5ce8b4064e3a8d6ea8baefefafa1","placeholder":"​","style":"IPY_MODEL_efc6b8c07d0e4be98a7d106213ac90ef","value":"tokenizer_config.json: 100%"}},"b56f256fa80640cc9d777fd263a3fe52":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_92f05e685f5c49a18925c6386ae92630","max":562,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ff0a0defad614a53a3d7e4a164f5f6b8","value":562}},"451bd9f3f11a449da393391ad913bbe7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_09fcc159f1134b4383063f770bdb2887","placeholder":"​","style":"IPY_MODEL_2837d58354a54900b5f586f5711b9999","value":" 562/562 [00:00&lt;00:00, 31.5kB/s]"}},"fd2f2e5a68a04c20a2eb8e4ec54cf25a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b8ea5ce8b4064e3a8d6ea8baefefafa1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"efc6b8c07d0e4be98a7d106213ac90ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"92f05e685f5c49a18925c6386ae92630":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff0a0defad614a53a3d7e4a164f5f6b8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"09fcc159f1134b4383063f770bdb2887":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2837d58354a54900b5f586f5711b9999":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"03f963eb581447ac93e05ad50892a167":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e37bacd90d4f4015a09bb5a4d0c444b3","IPY_MODEL_562e365fd6754bef853630c0cac4ec59","IPY_MODEL_46b1ac7c0ad2483aac34b612134358d7"],"layout":"IPY_MODEL_5fcbee18119c4df9a0df4a96e77eb699"}},"e37bacd90d4f4015a09bb5a4d0c444b3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9f522d8f059f46c7a415d4657023e995","placeholder":"​","style":"IPY_MODEL_74fa5eb326cb4d6d9b195a17fcab86d2","value":"vocab.txt: "}},"562e365fd6754bef853630c0cac4ec59":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e0b272bd200e46908ed9ee005a262d2a","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ea8e6c15414045028557db4c206286e6","value":1}},"46b1ac7c0ad2483aac34b612134358d7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_33130e17e51b46e7895d08dc18bb1dc5","placeholder":"​","style":"IPY_MODEL_dfaff96579a14db68055b5d6def7a0eb","value":" 799k/? [00:00&lt;00:00, 12.1MB/s]"}},"5fcbee18119c4df9a0df4a96e77eb699":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9f522d8f059f46c7a415d4657023e995":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"74fa5eb326cb4d6d9b195a17fcab86d2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e0b272bd200e46908ed9ee005a262d2a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"ea8e6c15414045028557db4c206286e6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"33130e17e51b46e7895d08dc18bb1dc5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dfaff96579a14db68055b5d6def7a0eb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2182a3967d184770a5dfe6ae95e76c9d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2814e5b6f4524473aee6e349ee0e520c","IPY_MODEL_86352508dc0a40ae821149d8d8b5d17a","IPY_MODEL_4b745750798945408bbcb2bad6efc71b"],"layout":"IPY_MODEL_93a29f3a32694d528f1ecdf600a05f35"}},"2814e5b6f4524473aee6e349ee0e520c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1f519309a50b414ba79aaa9b69958d71","placeholder":"​","style":"IPY_MODEL_7e2522fdf32a4636ad06babec7f98ace","value":"bpe.codes: "}},"86352508dc0a40ae821149d8d8b5d17a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_97c2091a0a134be6bf1c3bf960751a83","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cb7a30df63084d2f8c33e9d689b75f92","value":1}},"4b745750798945408bbcb2bad6efc71b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d7c16551ba0940a0b116460af052db41","placeholder":"​","style":"IPY_MODEL_ece0cebe2e5141abb2eee45e5ad6e2db","value":" 1.04M/? [00:00&lt;00:00, 25.9MB/s]"}},"93a29f3a32694d528f1ecdf600a05f35":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1f519309a50b414ba79aaa9b69958d71":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7e2522fdf32a4636ad06babec7f98ace":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"97c2091a0a134be6bf1c3bf960751a83":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"cb7a30df63084d2f8c33e9d689b75f92":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d7c16551ba0940a0b116460af052db41":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ece0cebe2e5141abb2eee45e5ad6e2db":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d2f7b415538b4662b045f79199024e6e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f6e2a6942bc24219aecea08b27a11337","IPY_MODEL_e3709681a4d5417eae3d230cd77f2a5b","IPY_MODEL_6c5fd8654f424f3f872c7846d82ba196"],"layout":"IPY_MODEL_6092627473d94ce885efe8675e82a0d5"}},"f6e2a6942bc24219aecea08b27a11337":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_55efaae9d713480d877355100f4e780e","placeholder":"​","style":"IPY_MODEL_9b5d50e77b464ecea67294d6c99dd8cb","value":"added_tokens.json: 100%"}},"e3709681a4d5417eae3d230cd77f2a5b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6792415b82bb46babe5d16e755931c4d","max":22,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5737d3a75e014116a08ad8f1a703b4c0","value":22}},"6c5fd8654f424f3f872c7846d82ba196":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f25beaa77c0a46b6b47097c43762499c","placeholder":"​","style":"IPY_MODEL_610b5f90fa454eb182d96ff17ed8e79c","value":" 22.0/22.0 [00:00&lt;00:00, 1.38kB/s]"}},"6092627473d94ce885efe8675e82a0d5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55efaae9d713480d877355100f4e780e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9b5d50e77b464ecea67294d6c99dd8cb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6792415b82bb46babe5d16e755931c4d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5737d3a75e014116a08ad8f1a703b4c0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f25beaa77c0a46b6b47097c43762499c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"610b5f90fa454eb182d96ff17ed8e79c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0907bd6597ce452d86f7207d85b74cd0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bb938ca534bd4416820f18fca749c819","IPY_MODEL_8d58374741b640a496e25d2acea70f4f","IPY_MODEL_686db5cd28f14c44b8bc22441234e12e"],"layout":"IPY_MODEL_90193bab201a43baab9921016cd4cebf"}},"bb938ca534bd4416820f18fca749c819":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c054c6b5a5e24c3f83b90f5d196ca492","placeholder":"​","style":"IPY_MODEL_6f002c0c97f24bdbaf6c7e2cbd903f62","value":"special_tokens_map.json: 100%"}},"8d58374741b640a496e25d2acea70f4f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b2082f6f98344da1aaefde436d93270a","max":167,"min":0,"orientation":"horizontal","style":"IPY_MODEL_884ae8a0d24540b4adeaf30fdadf5c64","value":167}},"686db5cd28f14c44b8bc22441234e12e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_73403beca3a141869b01693fbfab0411","placeholder":"​","style":"IPY_MODEL_c764bd6cd9334b03bceff7be463ff8ad","value":" 167/167 [00:00&lt;00:00, 9.25kB/s]"}},"90193bab201a43baab9921016cd4cebf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c054c6b5a5e24c3f83b90f5d196ca492":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6f002c0c97f24bdbaf6c7e2cbd903f62":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b2082f6f98344da1aaefde436d93270a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"884ae8a0d24540b4adeaf30fdadf5c64":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"73403beca3a141869b01693fbfab0411":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c764bd6cd9334b03bceff7be463ff8ad":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}